import { FieldArray, Form, Formik } from "formik";
import { useEffect, useMemo, useState, useCallback } from "react";
import { Alert, Button, IconButton, Snackbar, Table, TableCell, TableHead, TableRow } from "@mui/material";
import { Delete } from '@mui/icons-material';
import AddCircleIcon from '@mui/icons-material/AddCircle';
import CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';
import SaveAsIcon from '@mui/icons-material/SaveAs';
import { FixedSizeList } from 'react-window';
import { connect } from 'react-redux';
import { useDeleteLenderODByIdMutation, useGetLenderODFormDataQuery, useSaveLenderODFormDataMutation } from "../../../features/application-form/capitalResourceForm";
import AutoSave from "../../../components/framework/AutoSave";
import { TextBoxField } from "../../../components/framework/TextBoxField";
import FormLoader from "../../../loader/FormLoader";
import { EnhancedDropDown } from "../../../components/framework/EnhancedDropDown";
import { AdvanceDatePickerField } from "../../../components/framework/EnhancedComponents";
import ConfirmationAlertDialog from "../../../models/application-form/ConfirmationAlertDialog";
import { OnlineSnackbar } from "../../../components/shared/OnlineSnackbar";
import { MultipleLenderDropDown } from "../commonFiles/MultipleLenderDropDown";
import { AdvanceTextBoxField } from "../../../components/framework/AdvanceTextBoxField";
import FullScreenLoaderNoClose from "../../../components/common/FullScreenLoaderNoClose";
import { useGetMaterQuery } from "../../../features/master/api";
import { modify } from "../../../utlis/helpers";
import * as Yup from 'yup';

interface LenderRow {
  lenderName: string;
  lenderType: string | null;
  sancDt: string | null;
  sancAmt: number | null;
  disbDt: string | null;
  disbAmt: number | null;
  undrawnSanc: number | null;
  outstandingAmt: number | null;
  totalExposure: number | null;
  intRate: number | null;
  tenure: number | null;
  contactDetails: string | null;
  acr: number | null;
  security: string;
  corpGuarantee: string;
  persGuarantee: string;
  collSecurity: string;
  majorCovenants: string;
  slNo: number | null;
  saveStatus: string;
  applId: string;
}

interface FormValues {
  data: LenderRow[];
}

interface Props {
  applId: string;
  excelData: any[];
}

const LenderODForm = ({ applId, excelData }: Props) => {
  const [addLimitODDetails] = useSaveLenderODFormDataMutation();
  const [deleteLimitODDetails] = useDeleteLenderODByIdMutation();
  const { data: LimitODData, isLoading } = useGetLenderODFormDataQuery(applId);
  const [open, setOpen] = useState(false);
  const [index, setIndex] = useState(0);
  const [initialValues, setInitialValues] = useState<FormValues>({ data: [] });
  const [openConfirmation, setOpenConfirmation] = useState(false);
  const [formData, setFormData] = useState<LenderRow[] | null>(null);
  const [actionVal, setActionVal] = useState<string | null>(null);
  const [openSnackbar, setOpenSnackbar] = useState(false);
  const [snackMsg, setSnackMsg] = useState("");
  const [severity, setSeverity] = useState<"success" | "error">("success");
  const [isUploading, setIsUploading] = useState(false);
  const [isProcessing, setIsProcessing] = useState(false);
  const [snackOpen, setSnackOpen] = useState(false);
  const [snackSeverity, setSnackSeverity] = useState<"error" | "success" | "info">("error");
  const [snackMessages, setSnackMessages] = useState<string[]>([]);

  const columnWidths = [40, 50, 250, 150, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 350, 350, 350, 350];

  const formatDate = (str: string | null): string => {
    if (!str) return "";
    if (typeof str === "string") return str;
    const date = new Date(str);
    const mnth = ("0" + (date.getMonth() + 1)).slice(-2);
    const day = ("0" + date.getDate()).slice(-2);
    return [day, mnth, date.getFullYear()].join("-");
  };

  useEffect(() => {
    if (LimitODData) {
      const dataWithApplId: LenderRow[] = LimitODData.map((item: any) => ({ ...item, applId }));
      setInitialValues({ data: dataWithApplId });
    }
  }, [LimitODData, applId]);

  useEffect(() => {
    if (excelData && excelData.length > 0) {
      setIsProcessing(true);
      const lenderRows = excelData.filter((row: any) => row[2] && row[2] !== 'Total');
      const newData: LenderRow[] = lenderRows.map((excelRow: any) => ({
        lenderName: excelRow[2]?.toString().trim() || "",
        lenderType: excelRow[3]?.toString().trim() || null,
        sancDt: formatDate(excelRow[4]),
        sancAmt: parseExcelValue(excelRow[5]),
        disbDt: formatDate(excelRow[6]),
        disbAmt: parseExcelValue(excelRow[7]),
        undrawnSanc: parseExcelValue(excelRow[8]),
        outstandingAmt: parseExcelValue(excelRow[9]),
        totalExposure: calculateTotalExposure(parseExcelValue(excelRow[8]), parseExcelValue(excelRow[9])),
        intRate: parseExcelValue(excelRow[11]),
        tenure: parseExcelValue(excelRow[12]),
        contactDetails: excelRow[13]?.toString().trim() || null,
        acr: parseExcelValue(excelRow[14]),
        security: excelRow[15]?.toString().trim() || "",
        corpGuarantee: excelRow[16]?.toString().trim() || "",
        persGuarantee: excelRow[17]?.toString().trim() || "",
        collSecurity: excelRow[18]?.toString().trim() || "",
        majorCovenants: excelRow[19]?.toString().trim() || "",
        slNo: null,
        saveStatus: '01',
        applId,
      }));
      setTimeout(() => {
        setInitialValues({ data: newData });
        setIsProcessing(false);
        setOpenSnackbar(true);
        setSeverity("success");
        setSnackMsg("Lender data imported successfully");
      }, 0);
    }
  }, [excelData, applId]);

  const parseExcelValue = (value: any): number => {
    if (value === undefined || value === null || value === '') return 0;
    if (typeof value === 'string') return parseFloat(value.replace(/,/g, '')) || 0;
    return parseFloat(value) || 0;
  };

  const extractErrorMessages = (errorResponse: Record<string, string>): string[] => {
    return Object.values(errorResponse).flatMap(msg => msg.split(',').map(m => m.trim()));
  };

  const handleSubmitApis = async (values: FormValues | LenderRow[]) => {
    try {
      const requestBody = Array.isArray(values) ? values : values.data;
      setIsUploading(true);
      if (await addLimitODDetails(requestBody).unwrap()) {
        setIsUploading(false);
        setOpenSnackbar(true);
        setSeverity("success");
        setSnackMsg(requestBody[0]?.saveStatus === '02' ? "Section submitted successfully" : "Record saved successfully");
        setActionVal(null);
        return true;
      }
      return false;
    } catch (err: any) {
      setIsUploading(false);
      if (err.status === 400 && err.message === "Invalid") {
        const errorMessages = extractErrorMessages(err.customCode);
        setSnackMessages(errorMessages.length > 0 ? errorMessages : ["Validation failed."]);
        setSnackSeverity('error');
        setSnackOpen(true);
      } else {
        console.error(err);
      }
      return false;
    }
  };

  const handleClosePop = () => setOpenSnackbar(false);

  const handleDelete = async (applId: string, index: number) => {
    handleClose();
    try {
      if (await deleteLimitODDetails({ applId, index }).unwrap()) {
        setOpenSnackbar(true);
        setSeverity("success");
        setSnackMsg("Record deleted successfully");
      }
    } catch (error) {
      console.error("Error deleting record:", error);
      setOpenSnackbar(true);
      setSeverity("error");
      setSnackMsg("Failed to delete");
    }
  };

  const handleClickOpen = (index: number) => {
    setIndex(index);
    setOpen(true);
  };

  const calculateSanTotal = (values: FormValues): number => values.data.reduce((total, data1) => total + (parseFloat(data1.sancAmt as any) || 0), 0);
  const calculateDisbTotal = (values: FormValues): number => values.data.reduce((total, data1) => total + (parseFloat(data1.disbAmt as any) || 0), 0);
  const calculateUndrawnSanctionTotal = (values: FormValues): number => values.data.reduce((total, data1) => total + (parseFloat(data1.undrawnSanc as any) || 0), 0);
  const calculateOutStTotal = (values: FormValues): number => values.data.reduce((total, data1) => total + (parseFloat(data1.outstandingAmt as any) || 0), 0);
  const calculateExpoTotal = (values: FormValues): number => values.data.reduce((total, data1) => total + (parseFloat(data1.totalExposure as any) || 0), 0);

  const termLoanListingSchema = Yup.object().shape({
    data: Yup.array().of(
      Yup.object().shape({
        lenderName: Yup.string().min(3, 'Lender Name must be at least 3 characters').max(100, 'Lender Name cannot exceed 100 characters').required('Required'),
        lenderType: Yup.string().max(100, 'Lender Type cannot exceed 100 characters').required('Required'),
        acr: Yup.string().required('Required').matches(/^[0-9.]+$/, 'ACR must be a number').test('positive', 'ACR must be between 0-2', val => val ? Number(val) > 0 && Number(val) <= 2 : false),
        sancAmt: Yup.number().required('Required'),
        disbAmt: Yup.number().required('Required').test('is-not-greater-than-value1', 'Disbursement Amt. cannot be greater than Sanction Amt.', function (value) {
          const { sancAmt } = this.parent;
          return value <= sancAmt;
        }),
      })
    ),
  });

  const handleClose = () => setOpen(false);
  const handleCloseConfirmation = () => {
    setActionVal(null);
    setOpenConfirmation(false);
  };
  const handleSubmitConfirmation = (values: LenderRow[]) => {
    setOpenConfirmation(false);
    handleSubmitApis(values);
  };
  const handleSubmit = async (values: FormValues) => {
    const finalValue = values.data.map((listData, index) => ({
      ...listData,
      applId,
      slNo: index + 1,
      saveStatus: actionVal || '',
    }));
    if (actionVal === '02') {
      setFormData(finalValue);
      setOpenConfirmation(true);
    } else {
      handleSubmitApis(finalValue);
    }
    setActionVal(null);
  };

  const handleClickSetAction = (action: string) => setActionVal(action);

  const calculateTotalExposure = (outstandingAmt: number | null, undrawnSanc: number | null): number => {
    const outstanding = parseFloat(outstandingAmt?.toString() || '0') || 0;
    const undrawn = parseFloat(undrawnSanc?.toString() || '0') || 0;
    return outstanding + undrawn;
  };

  const handleFieldChange = useCallback((index: number, field: string, value: any, setFieldValue: any, values: FormValues) => {
    setFieldValue(`data.${index}.${field}`, value);
    if (field === 'outstandingAmt' || field === 'undrawnSanc') {
      const currentRow = values.data[index];
      const outstandingAmt = field === 'outstandingAmt' ? value : currentRow.outstandingAmt;
      const undrawnSanc = field === 'undrawnSanc' ? value : currentRow.undrawnSanc;
      const newTotalExposure = calculateTotalExposure(outstandingAmt, undrawnSanc);
      setFieldValue(`data.${index}.totalExposure`, newTotalExposure);
    }
  }, []);

  const handleSnackbarCloseSnack = () => setSnackOpen(false);

  const { data: bankMasterData, isLoading: isBankMasterLoading } = useGetMaterQuery(`refapi/mstr/getBankMasters`);
  const bankOptions = useMemo(() => bankMasterData ? modify("mstr/getBankMasters", bankMasterData) : [], [bankMasterData]);

  const { data: lenderTypeData, isLoading: isLenderTypeLoading } = useGetMaterQuery(`refapi/mstr/getLenderType`);
  const lenderTypeOptions = useMemo(() => lenderTypeData ? modify("mstr/getLenderType", lenderTypeData) : [], [lenderTypeData]);

  const renderRow = ({ index, style, data }: { index: number; style: any; data: { values: FormValues; setFieldValue: any } }) => {
    const { values, setFieldValue } = data;
    const row = values.data[index];
    return (
      <TableRow style={style}>
        <TableCell style={{ minWidth: `${columnWidths[0]}px`, padding: '8px' }}>
          <IconButton disabled={row.saveStatus === '02'} onClick={() => row.slNo ? handleClickOpen(row.slNo) : values.data.splice(index, 1)}>
            <Delete />
          </IconButton>
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[1]}px`, padding: '8px' }}>{index + 1}</TableCell>
        <TableCell style={{ minWidth: `${columnWidths[2]}px`, padding: '8px' }}>
          <MultipleLenderDropDown
            label=""
            name={`data.${index}.lenderName`}
            domain="mstr/getBankMasters"
            disabled={row.saveStatus === '02'}
            options={bankOptions}
            isLoading={isBankMasterLoading}
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[3]}px`, padding: '8px' }}>
          <EnhancedDropDown
            label=""
            name={`data.${index}.lenderType`}
            disabled={row.saveStatus === '02'}
            customOptions={lenderTypeOptions}
            domain=""
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[4]}px`, padding: '8px' }}>
          <AdvanceDatePickerField
            label=""
            name={`data.${index}.sancDt`}
            disableFuture={true}
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[5]}px`, padding: '8px' }}>
          <TextBoxField
            label=""
            name={`data.${index}.sancAmt`}
            type="number"
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[6]}px`, padding: '8px' }}>
          <AdvanceDatePickerField
            label=""
            name={`data.${index}.disbDt`}
            disableFuture={true}
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[7]}px`, padding: '8px' }}>
          <TextBoxField
            label=""
            name={`data.${index}.disbAmt`}
            type="number"
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[8]}px`, padding: '8px' }}>
          <AdvanceTextBoxField
            label=""
            name={`data.${index}.undrawnSanc`}
            type="number"
            onCustomChange={(value: any) => handleFieldChange(index, 'undrawnSanc', value, setFieldValue, values)}
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[9]}px`, padding: '8px' }}>
          <AdvanceTextBoxField
            label=""
            name={`data.${index}.outstandingAmt`}
            type="number"
            onCustomChange={(value: any) => handleFieldChange(index, 'outstandingAmt', value, setFieldValue, values)}
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[10]}px`, padding: '8px' }}>
          <AdvanceTextBoxField
            label=""
            name={`data.${index}.totalExposure`}
            type="number"
            disabled={true}
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[11]}px`, padding: '8px' }}>
          <TextBoxField
            label=""
            name={`data.${index}.intRate`}
            type="number"
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[12]}px`, padding: '8px' }}>
          <TextBoxField
            label=""
            name={`data.${index}.tenure`}
            type="number"
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[13]}px`, padding: '8px' }}>
          <TextBoxField
            label=""
            name={`data.${index}.contactDetails`}
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[14]}px`, padding: '8px' }}>
          <TextBoxField
            label=""
            name={`data.${index}.acr`}
            type="number"
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[15]}px`, padding: '8px' }}>
          <TextBoxField
            label=""
            name={`data.${index}.security`}
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[16]}px`, padding: '8px' }}>
          <TextBoxField
            label=""
            name={`data.${index}.corpGuarantee`}
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[17]}px`, padding: '8px' }}>
          <TextBoxField
            label=""
            name={`data.${index}.persGuarantee`}
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[18]}px`, padding: '8px' }}>
          <TextBoxField
            label=""
            name={`data.${index}.collSecurity`}
          />
        </TableCell>
        <TableCell style={{ minWidth: `${columnWidths[19]}px`, padding: '8px' }}>
          <TextBoxField
            label=""
            name={`data.${index}.majorCovenants`}
          />
        </TableCell>
      </TableRow>
    );
  };

  if (isLoading || isProcessing) return <FormLoader />;
  if (isUploading) return <FullScreenLoaderNoClose />;

  return (
    <div className="wrap-appraisal-area">
      <Snackbar
        open={snackOpen}
        autoHideDuration={6000}
        onClose={handleSnackbarCloseSnack}
        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}
      >
        <Alert onClose={handleSnackbarCloseSnack} severity={snackSeverity} sx={{ width: '100%' }}>
          <ul className="list-unstyled">
            {snackMessages.map((msg, i) => (
              <li key={i} className="text-danger">{`(${i + 1}) ${msg}`}</li>
            ))}
          </ul>
        </Alert>
      </Snackbar>

      <ConfirmationAlertDialog
        id={1}
        type={4}
        open={openConfirmation}
        handleClose={handleCloseConfirmation}
        handleDelete={handleSubmitConfirmation}
        values={formData}
      />
      <div className="custome-form">
        <ConfirmationAlertDialog
          id={2}
          index={index}
          type={2}
          open={open}
          handleClose={handleClose}
          handleDelete={handleDelete}
        />
        <div className="wrap-inner-table" style={{ overflow: 'auto' }}>
          <Formik
            initialValues={initialValues}
            onSubmit={handleSubmit}
            enableReinitialize={true}
            validationSchema={termLoanListingSchema}
            validateOnChange={true}
            validateOnBlur={true}
          >
            {({ values, setFieldValue }) => {
              const sanTotal = useMemo(() => calculateSanTotal(values), [values]);
              const disbTotal = useMemo(() => calculateDisbTotal(values), [values]);
              const undrawnTotal = useMemo(() => calculateUndrawnSanctionTotal(values), [values]);
              const outStTotal = useMemo(() => calculateOutStTotal(values), [values]);
              const expoTotal = useMemo(() => calculateExpoTotal(values), [values]);
              const totalWidth = columnWidths.reduce((a, b) => a + b, 0);

              return (
                <Form>
                  <fieldset disabled={values?.data?.[0]?.saveStatus === "02"}>
                    {values?.data?.[0]?.saveStatus !== "02" && (
                      <AutoSave handleSubmit={handleSubmit} values={values} debounceMs={10000} />
                    )}
                    <FieldArray name="data">
                      {({ push }) => (
                        <>
                          {values?.data?.[0]?.saveStatus !== "02" && (
                            <Button
                              type="button"
                              size='small'
                              className='psn_btn text-capitalize my-2 saveBtn'
                              variant="contained"
                              color="primary"
                              style={{ marginLeft: '15px', display: 'block' }}
                              onClick={() =>
                                push({
                                  applId,
                                  slNo: values.data.length,
                                  lenderName: '',
                                  lenderType: null,
                                  sancDt: null,
                                  sancAmt: null,
                                  disbDt: null,
                                  disbAmt: null,
                                  undrawnSanc: null,
                                  outstandingAmt: null,
                                  totalExposure: null,
                                  intRate: null,
                                  tenure: null,
                                  contactDetails: null,
                                  acr: null,
                                  security: '',
                                  corpGuarantee: '',
                                  persGuarantee: '',
                                  collSecurity: '',
                                  majorCovenants: '',
                                  saveStatus: ''
                                })
                              }
                            >
                              Add <AddCircleIcon />
                            </Button>
                          )}
                          <Table sx={{ minWidth: totalWidth }} aria-label="simple table">
                            <TableHead>
                              <TableRow>
                                {columnWidths.map((width, i) => (
                                  <TableCell key={i} style={{ minWidth: `${width}px`, padding: '8px' }}>
                                    {i === 0 && <b>Action</b>}
                                    {i === 1 && <b>Sr. No.</b>}
                                    {i === 2 && <b>Name of the Bank/ lender</b>}
                                    {i === 3 && <b>Institution Type</b>}
                                    {i === 4 && <b>Date of Sanction</b>}
                                    {i === 5 && <b>Sanctioned Amount (In ₹ crore)</b>}
                                    {i === 6 && <b>Date of Disbursement</b>}
                                    {i === 7 && <b>Amount Disbursement (In ₹ crore)</b>}
                                    {i === 8 && <b>Undrawn Sanction</b>}
                                    {i === 9 && <b>Amount Outstanding (In ₹ crore)</b>}
                                    {i === 10 && <b>Total Exposure</b>}
                                    {i === 11 && <b>Interest rate (%)</b>}
                                    {i === 12 && <b>Tenure(in months)</b>}
                                    {i === 13 && <b>Contact Details of Lenders</b>}
                                    {i === 14 && <b>ACR</b>}
                                    {i === 15 && <b>Security</b>}
                                    {i === 16 && <b>Any Corporate Guarantee given for others</b>}
                                    {i === 17 && <b>Any personal guarantee of promoters / founders / directors given to others</b>}
                                    {i === 18 && <b>Any collateral security provided to any lender</b>}
                                    {i === 19 && <b>Major Covenants</b>}
                                  </TableCell>
                                ))}
                              </TableRow>
                            </TableHead>
                            <FixedSizeList
                              height={300}
                              itemCount={values.data.length}
                              itemSize={50}
                              width={totalWidth}
                              itemData={{ values, setFieldValue }}
                              style={{ overflowX: 'hidden' }}
                            >
                              {renderRow}
                            </FixedSizeList>
                            <TableRow>
                              <TableCell style={{ minWidth: `${columnWidths[0]}px`, padding: '8px' }}></TableCell>
                              <TableCell style={{ minWidth: `${columnWidths[1]}px`, padding: '8px' }}></TableCell>
                              <TableCell style={{ minWidth: `${columnWidths[2]}px`, padding: '8px' }}></TableCell>
                              <TableCell style={{ minWidth: `${columnWidths[3]}px`, padding: '8px' }}><b>Total</b></TableCell>
                              <TableCell style={{ minWidth: `${columnWidths[4]}px`, padding: '8px' }}>
                                <b>{sanTotal.toLocaleString('en-IN', { maximumFractionDigits: 2, style: 'currency', currency: 'INR' })}</b>
                              </TableCell>
                              <TableCell style={{ minWidth: `${columnWidths[5]}px`, padding: '8px' }}></TableCell>
                              <TableCell style={{ minWidth: `${columnWidths[6]}px`, padding: '8px' }}>
                                <b>{disbTotal.toLocaleString('en-IN', { maximumFractionDigits: 2, style: 'currency', currency: 'INR' })}</b>
                              </TableCell>
                              <TableCell style={{ minWidth: `${columnWidths[7]}px`, padding: '8px' }}>
                                <b>{undrawnTotal.toLocaleString('en-IN', { maximumFractionDigits: 2, style: 'currency', currency: 'INR' })}</b>
                              </TableCell>
                              <TableCell style={{ minWidth: `${columnWidths[8]}px`, padding: '8px' }}>
                                <b>{outStTotal.toLocaleString('en-IN', { maximumFractionDigits: 2, style: 'currency', currency: 'INR' })}</b>
                              </TableCell>
                              <TableCell style={{ minWidth: `${columnWidths[9]}px`, padding: '8px' }}>
                                <b>{expoTotal.toLocaleString('en-IN', { maximumFractionDigits: 2, style: 'currency', currency: 'INR' })}</b>
                              </TableCell>
                              <TableCell style={{ minWidth: `${columnWidths.slice(10).reduce((a, b) => a + b, 0)}px`, padding: '8px' }} colSpan={10}></TableCell>
                            </TableRow>
                          </Table>
                        </>
                      )}
                    </FieldArray>
                  </fieldset>
                  {values?.data?.[0]?.saveStatus !== "02" && (
                    <>
                      <Button
                        className="sbmtBtn psn_btn mt-3 mb-3 ms-3"
                        type='submit'
                        onClick={() => handleClickSetAction('01')}
                        variant="contained"
                      >
                        Save <CheckCircleOutlineIcon />
                      </Button>
                      <Button
                        className="sbmtBtn sbmtBtn_scn psn_btn mt-3 mb-3 ms-3"
                        type='submit'
                        onClick={() => handleClickSetAction('02')}
                        variant="contained"
                      >
                        Submit <SaveAsIcon />
                      </Button>
                    </>
                  )}
                </Form>
              );
            }}
          </Formik>
        </div>
        <OnlineSnackbar open={openSnackbar} msg={snackMsg} severity={severity} handleSnackClose={handleClosePop} />
      </div>
    </div>
  );
};

export default connect((state: any) => ({
  applId: state.userStore.applId
}))(LenderODForm);











import {
    Accordion,
    AccordionSummary,
    AccordionDetails,
    Tabs,
    Typography,
    TextField,
    FormControl,
    InputLabel,
    MenuItem,
    Select,
    SelectChangeEvent,
    Autocomplete,
    Table,
    TableBody,
    TableHead,
    TableRow,
    TableCell,
    Button
} from "@mui/material";
import React, { memo } from "react";
import Tab from "@mui/material/Tab";
import Box from "@mui/material/Box";
import Section from "../../nbfc/Section";
import { useParams } from "react-router-dom";
import Workflow from "../../workflow/Workflow";
import { useAppSelector } from "../../../app/hooks";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
import ReviewOfNBFC from "../../monitoringPages/reviewModule/ReviewOfNBFC/ReviewOfNBFC";
import MonitoringExternalRating from "../../monitoringPages/reviewModule/MonitoringExternalRating/MonitoringExternalRating";
import ComplianceToPCAFramwork from "../../monitoringPages/reviewModule/complianceToPca/ComplianceToPCAFramwork";
import CriticalEvents from "../../monitoringPages/reviewModule/CriticalEvents/CriticalEvents";
import AnyOtherPendingComments from "../../monitoringPages/reviewModule/AnyOtherPendingComments/AnyOtherPendingComments";
import FinancialTable from "../common-components/FinancialTable";
import { RfBriefBackground } from "./RfBriefBackground";
import RfInternalRating from "./RfInternalRating";
import RfExternalRating from "./RfExternalRating";
import RfRateOfInterest from "./RfRateOfInterest";
import PresentProposal from "./PresentProposal";
import ExternalRatingProposal from "./ExternalRatingProposal";
import ApprovedInterestRateStructure from "./ApprovedInterestRateStructure";
import InterestRateApplicable from "./InterestRateApplicable";
import IssueUnderConsideration from "./IssueUnderConsideration";
import RateRequestCompany from "./RateRequestCompany";
import Recommendation from "./Recommendation";

interface TabPanelProps {
    children?: React.ReactNode;
    index: number;
    value: number;
}

function CustomTabPanel(props: Readonly<TabPanelProps>) {
    const { children, value, index, ...other } = props;

    return (
        <div
            role="tabpanel"
            hidden={value !== index}
            id={`simple-tabpanel-${index}`}
            aria-labelledby={`simple-tab-${index}`}
            {...other}
        >
            {value === index && <Box sx={{ p: 3 }}>{children}</Box>}
        </div>
    );
}

function a11yProps(index: number) {
    return {
        id: `simple-tab-${index}`,
        "aria-controls": `simple-tabpanel-${index}`,
    };
}

const InteresetRateFixation = () => {
    const [value, setValue] = React.useState(0);
    const { id } = useParams();
    const { applId } = useAppSelector((state: { userStore: any; }) => state.userStore);

    const [expanded, setExpanded] = React.useState("");
    const onOpenChange =
        (panel: any) => (event: React.SyntheticEvent, isExpanded: any) => {
            setExpanded(isExpanded ? panel : false);
        };

    const handleChange = (event: React.SyntheticEvent, newValue: number) => {
        setValue(newValue);
    };

    const [borrower, setBorrower] = React.useState('');

    const handleChangeBrw = (event: SelectChangeEvent) => {
        setBorrower(event.target.value);
    };

    const topBorrowers = [
        { label: 'Borrower 1', nbfcId: 1 },
        { label: 'Borrower 2', nbfcId: 2 },
        { label: 'Borrower 3', nbfcId: 3 },
        { label: 'Borrower 4', nbfcId: 4 },
    ];

    const topSchemes = [
        { label: 'Scheme of refinance to nbfcs', schCd: 'a' },
        { label: 'Scheme 2', schCd: 'b' },
        { label: 'Scheme 3', schCd: 'c' },
        { label: 'Scheme 4', schCd: 'd' },
        { label: 'Scheme 5', schCd: 'e' },
        { label: "Scheme 6", schCd: 'f' }
    ];

    const options = [
        { label: "Excellent", value: "Excellent" },
        { label: "Good", value: "Good" },
        { label: "Satisfactory", value: "Satisfactory" },
        { label: "Moderate", value: "Moderate" },
        { label: "Poor", value: "Poor" },
        { label: "Default", value: "Default" },
    ];

    const dummyLoanAccounts: any[] = [
        {
            id: 1, loanAccountNo: '000405007899', DisbDate: '30/04/2025', DisbAmt: 250, osAmount: 250,
            currentROI: '4.75', benchmark: "Benchmark will be here", fixedORFloating: 4, resetClause: 'Reset Clause here',
            loanStatus: 'Approved'
        },
        {
            id: 2, loanAccountNo: '000405007877', DisbDate: '30/04/2025', DisbAmt: 250, osAmount: 250,
            currentROI: '4.75', benchmark: "Benchmark will be here", fixedORFloating: 4, resetClause: 'Reset Clause here',
            loanStatus: 'Approved'
        }
    ];

    return (
        <div className="wrap-appraisal-area ">
            <Section>
                <div className="inner-top-heading">
                    <Typography
                        className="wrap-bold"
                        noWrap
                        variant="subtitle1"
                        component="div"
                        width={'50%'}
                    >
                        <h6 className="title ps-1">Non REF Disb Time Fixing</h6>
                    </Typography>
                </div>

                <Box className="wrap-tabs" sx={{ width: "100%" }}>
                    <Box sx={{ borderBottom: 1, borderColor: "divider" }}>
                        <Tabs
                            className="tabs-header"
                            value={value}
                            onChange={handleChange}
                            aria-label="basic tabs example"
                        >
                            <Tab
                                className="tab-ui"
                                label="Fixing of Interest Rate"
                                {...a11yProps(0)}
                            />
                            <Tab className="tab-ui" label="Financial" {...a11yProps(1)} />
                            <Tab className="tab-ui" label="Work Flow " {...a11yProps(2)} />
                        </Tabs>
                    </Box>
                    <CustomTabPanel value={value} index={0}>
                        <div className="wrap-appraisal-area">
                            <Section>
                                <div className="wrap-accordian custome-form text_count pt-3">
                                    {/* __________Issue under consideration___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panelX"}
                                        onChange={onOpenChange("panelX")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panelX-content"
                                            id="panelX-header"
                                        >
                                            Issue Under Consideration
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <IssueUnderConsideration irfId="IRF00001" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Background___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel2X"}
                                        onChange={onOpenChange("panel2X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel2X-content"
                                            id="panel2X-header"
                                        >
                                            Brief Background
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <RfBriefBackground irfId="IRF00001" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________External Rating___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel20X"}
                                        onChange={onOpenChange("panel20X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel20X-content"
                                            id="panel20X-header"
                                        >
                                            External Rating
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <RfExternalRating irfId="IRF00001" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Internal Rating___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel21X"}
                                        onChange={onOpenChange("panel21X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel21X-content"
                                            id="panel21X-header"
                                        >
                                            Internal Rating
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <RfInternalRating irfId="IRF00001" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Rate of Interest___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel22X"}
                                        onChange={onOpenChange("panel22X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel22X-content"
                                            id="panel22X-header"
                                        >
                                            Rate of Interest
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <RfRateOfInterest irfId="IRF00001" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Present Proposal___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel3X"}
                                        onChange={onOpenChange("panel3X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel3X-content"
                                            id="panel3X-header"
                                        >
                                            Present Proposal
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <PresentProposal irfId="IRF00001" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________External Rating Proposal___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel4X"}
                                        onChange={onOpenChange("panel4X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel4X-content"
                                            id="panel4X-header"
                                        >
                                            External Rating Proposal
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <ExternalRatingProposal irfId="IRF00001" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Approved Interest rate structure of the Bank___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel5X"}
                                        onChange={onOpenChange("panel5X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel5X-content"
                                            id="panel5X-header"
                                        >
                                            Approved Interest rate structure of the Bank
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <ApprovedInterestRateStructure irfId="IRF00001" />
                                            <InterestRateApplicable irfId="IRF00001" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Rate requested by the company___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel6X"}
                                        onChange={onOpenChange("panel6X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel6X-content"
                                            id="panel6X-header"
                                        >
                                            Rate Requested by the Company
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <RateRequestCompany irfId="IRF00001" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Recommendation___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel7X"}
                                        onChange={onOpenChange("panel7X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel7X-content"
                                            id="panel7X-header"
                                        >
                                            Recommendation
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <Recommendation irfId="IRF00001" />
                                        </AccordionDetails>
                                    </Accordion>
                                </div>
                            </Section>
                        </div>
                    </CustomTabPanel>
                    <CustomTabPanel value={value} index={1}>
                        <div className="wrap-appraisal-area">
                            <Section>
                                <div className="wrap-accordian custome-form text_count pt-3">
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panelX"}
                                        onChange={onOpenChange("panelX")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panelX-content"
                                            id="panelX-header"
                                        >
                                            Financial
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <div className="wrap-inner-table mt-0">
                                                <FinancialTable />
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>
                                </div>
                            </Section>
                        </div>
                    </CustomTabPanel>
                    <CustomTabPanel value={value} index={2}>
                        <Workflow formIdVal={applId} formTypeVal={"PREVISIT"} />
                    </CustomTabPanel>
                </Box>
            </Section>
        </div>
    );
};

export default memo(InteresetRateFixation);

import React, { useState } from 'react';
import {
    Table, TableBody, TableCell, TableHead, TableRow, Button, Grid, TextField, FormControl, InputLabel, Select, MenuItem, SelectChangeEvent
} from "@mui/material";
import CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';
import { Formik, Form } from 'formik';
import * as Yup from 'yup';
import { useGetRecommendationsQuery, useSaveRecommendationsMutation } from '../../../features/monitoring/interestRateFixationApi';
import NbfcSnackbar from '../../../components/shared/NbfcSnackbar';
import { TextBoxField } from '../../../components/framework/TextBoxField';
import { AdvanceDatePickerField } from '../../../components/framework/EnhancedComponents';
import AutoSave from '../../../components/framework/AutoSave';

const Recommendation = ({ irfId }: any) => {
    const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);
    const [snackMsg, setSnackMsg] = useState<string>("");
    const [severity, setSeverity] = useState<"success" | "error">("success");
    const [borrower, setBorrower] = useState('');

    const { data: recommendations, isLoading: isLoadingRecommendations } = useGetRecommendationsQuery(irfId, {
        skip: !irfId,
        refetchOnMountOrArgChange: true,
    });

    const [saveRecommendations] = useSaveRecommendationsMutation();

    const initialValues = {
        recommendation: recommendations?.[0] || {
            irfId,
            slNo: 1,
            scheme: "",
            amount: "",
            tenure: "",
            applicableIntRate: "",
            discretion: "",
            roiRecommended: "",
            resetClause: "",
            nextResetDt: null,
            saveStatus: '01',
            validityDate: null,
            dop: "",
            dopComments: "",
            discretionaryPowers: ""
        },
    };

    const validationSchema = Yup.object().shape({
        recommendation: Yup.object().shape({
            scheme: Yup.string().required("Required"),
            amount: Yup.number().typeError("Must be a number").required("Required").positive("Must be positive"),
            tenure: Yup.number().typeError("Must be a number").required("Required").positive("Must be positive"),
            applicableIntRate: Yup.number().typeError("Must be a number").required("Required").positive("Must be positive"),
            discretion: Yup.number().typeError("Must be a number").required("Required"),
            roiRecommended: Yup.string().required("Required"),
            resetClause: Yup.string().required("Required"),
            nextResetDt: Yup.string().required("Required"),
            validityDate: Yup.string().required("Required"),
            dop: Yup.string().required("Required"),
            dopComments: Yup.string().required("Required"),
            discretionaryPowers: Yup.string().required("Required"),
        }),
    });

    const handleSubmit = async (values: any) => {
        try {
            const finalValue = [{
                ...values.recommendation,
                irfId,
                slNo: 1,
                saveStatus: '01',
            }];
            await saveRecommendations(finalValue).unwrap();
            setOpenSnackbar(true);
            setSeverity("success");
            setSnackMsg("Recommendation saved successfully");
        } catch (error) {
            console.error("Error saving recommendation:", error);
            setOpenSnackbar(true);
            setSeverity("error");
            setSnackMsg("Failed to save Recommendation");
        }
    };

    const handleSnackClose = () => {
        setOpenSnackbar(false);
    };

    const handleChangeBrw = (event: SelectChangeEvent) => {
        setBorrower(event.target.value);
    };

    return (
        <div className="wrap-inner-table mt-4">
            {isLoadingRecommendations ? (
                <p>Loading...</p>
            ) : (
                <Formik
                    initialValues={initialValues}
                    validationSchema={validationSchema}
                    onSubmit={handleSubmit}
                    enableReinitialize={true}
                >
                    {({ values }) => (
                        <Form>
                            <AutoSave debounceMs={5000} values={values} handleSubmit={handleSubmit} />
                            <Table sx={{ minWidth: 650 }} aria-label="recommendation table">
                                <TableHead>
                                    <TableRow>
                                        <TableCell colSpan={8}><b>Interest Rate</b></TableCell>
                                    </TableRow>
                                    <TableRow>
                                        <TableCell><b>Scheme</b></TableCell>
                                        <TableCell><b>Amount (₹crore)</b></TableCell>
                                        <TableCell><b>Tenure</b></TableCell>
                                        <TableCell><b>Applicable Rate</b></TableCell>
                                        <TableCell><b>Discretion (%)</b></TableCell>
                                        <TableCell><b>ROI Recommended</b></TableCell>
                                        <TableCell><b>Reset Clause</b></TableCell>
                                        <TableCell><b>Next Reset Date</b></TableCell>
                                    </TableRow>
                                </TableHead>
                                <TableBody>
                                    <TableRow>
                                        <TableCell>
                                            <TextBoxField
                                                label=""
                                                name="recommendation.scheme"
                                            />
                                        </TableCell>
                                        <TableCell>
                                            <TextBoxField
                                                label=""
                                                name="recommendation.amount"
                                                type="number"
                                            />
                                        </TableCell>
                                        <TableCell>
                                            <TextBoxField
                                                label=""
                                                name="recommendation.tenure"
                                                type="number"
                                            />
                                        </TableCell>
                                        <TableCell>
                                            <TextBoxField
                                                label=""
                                                name="recommendation.applicableIntRate"
                                                type="number"
                                            />
                                        </TableCell>
                                        <TableCell>
                                            <TextBoxField
                                                label=""
                                                name="recommendation.discretion"
                                                type="number"
                                            />
                                        </TableCell>
                                        <TableCell>
                                            <TextBoxField
                                                label=""
                                                name="recommendation.roiRecommended"
                                            />
                                        </TableCell>
                                        <TableCell>
                                            <FormControl sx={{ m: 1, minWidth: 120 }} size="small">
                                                <InputLabel id="reset-clause-label">Select</InputLabel>
                                                <Select
                                                    labelId="reset-clause-label"
                                                    id="reset-clause"
                                                    value={borrower}
                                                    label="Reset Clause"
                                                    onChange={handleChangeBrw}
                                                    name="recommendation.resetClause"
                                                >
                                                    <MenuItem value="0">One</MenuItem>
                                                    <MenuItem value="1">Two</MenuItem>
                                                </Select>
                                            </FormControl>
                                        </TableCell>
                                        <TableCell>
                                            <AdvanceDatePickerField
                                                label=""
                                                name="recommendation.nextResetDt"
                                            />
                                        </TableCell>
                                    </TableRow>
                                </TableBody>
                            </Table>

                            <Grid container spacing={2} padding={4} className='form-grid p-0'>
                                <Grid item xs={12}>
                                    <h6>Validity of Interest Rate</h6>
                                    <Table sx={{ minWidth: 650 }} aria-label="validity table">
                                        <TableBody>
                                            <TableRow>
                                                <TableCell>
                                                    <AdvanceDatePickerField
                                                        label="Date"
                                                        name="recommendation.validityDate"
                                                    />
                                                </TableCell>
                                            </TableRow>
                                        </TableBody>
                                    </Table>
                                </Grid>

                                <Grid item xs={12}>
                                    <h6>DoP</h6>
                                    <Table sx={{ minWidth: 650 }} aria-label="dop table">
                                        <TableBody>
                                            <TableRow>
                                                <TableCell>
                                                    <FormControl sx={{ m: 1, minWidth: 120 }} size="small">
                                                        <InputLabel id="dop-label">Select</InputLabel>
                                                        <Select
                                                            labelId="dop-label"
                                                            id="dop"
                                                            value={borrower}
                                                            label="DoP"
                                                            onChange={handleChangeBrw}
                                                            name="recommendation.dop"
                                                        >
                                                            <MenuItem value="0">One</MenuItem>
                                                            <MenuItem value="1">Two</MenuItem>
                                                        </Select>
                                                    </FormControl>
                                                </TableCell>
                                            </TableRow>
                                            <TableRow>
                                                <TableCell>
                                                    <TextBoxField
                                                        label="Comments"
                                                        name="recommendation.dopComments"
                                                    />
                                                </TableCell>
                                            </TableRow>
                                        </TableBody>
                                    </Table>
                                </Grid>

                                <Grid item xs={12}>
                                    <h6>Discretionary Powers</h6>
                                    <Table sx={{ minWidth: 650 }} aria-label="discretionary powers table">
                                        <TableBody>
                                            <TableRow>
                                                <TableCell>
                                                    <TextBoxField
                                                        label="Discretionary Powers"
                                                        name="recommendation.discretionaryPowers"
                                                    />
                                                </TableCell>
                                            </TableRow>
                                        </TableBody>
                                    </Table>
                                </Grid>

                                <Grid item xs={12} sx={{ mt: 2 }}>
                                    <Button
                                        className="sbmtBtn mt-0 mb-3 ms-2 me-2"
                                        type='submit'
                                        variant="contained"
                                    >
                                        Save <CheckCircleOutlineIcon />
                                    </Button>
                                </Grid>
                            </Grid>
                        </Form>
                    )}
                </Formik>
            )}

            <NbfcSnackbar
                open={openSnackbar}
                msg={snackMsg}
                severity={severity}
                handleSnackClose={handleSnackClose}
                submitCall={false}
            />
        </div>
    );
};

export default Recommendation;

import { createApi } from "@reduxjs/toolkit/query/react";
import { customBaseQuery } from "../../app/commonApi";

export const interestRateFixationApi = createApi({
    reducerPath: 'interestRateFixationApi',
    baseQuery: customBaseQuery('refapi'),
    tagTypes: [
        'BriefBackground',
        'InternalRating',
        'ExternalRating',
        'ROID',
        'ROIR',
        'PresentProposal',
        'SidbiExposure',
        'SanctionRating',
        'ApprovedStructure',
        'ApprovedStructurePresent',
        'CompanyRateRequest',
        'interesetComment',
        'Recommendations'
    ],
    endpoints: (builder) => ({
        getFixationInterestRate: builder.query<any, string>({
            query: (applId) => `interestratefixation/getfixationinterestrate/${applId}`,
            providesTags: ['BriefBackground']
        }),
        saveInternalRating: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/saveinternalrating`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['InternalRating'],
        }),
        getInternalRatingPresent: builder.query<any, string>({
            query: (applId) => `interestratefixation/getinternalratingpresent/${applId}`,
            providesTags: ['InternalRating']
        }),
        getInternalRatingSanction: builder.query<any, string>({
            query: (applId) => `interestratefixation/getinternalratingsanction/${applId}`,
            providesTags: ['InternalRating']
        }),
        getExternalRatingSanction: builder.query<any, string>({
            query: (applId) => `interestratefixation/getexternalratingsanction/${applId}`,
            providesTags: ['ExternalRating']
        }),
        getExternalRatingPresent: builder.query<any, string>({
            query: (applId) => `interestratefixation/getexternalratingpresent/${applId}`,
            providesTags: ['ExternalRating']
        }),
        saveExternalRating: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/saveexternalrating`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['ExternalRating'],
        }),
        getResetlist: builder.query<any, string>({
            query: (applId) => `interestratefixation/getresetlist/${applId}`,
            providesTags: ['ROIR']
        }),
        saveReset: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/savereset`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['ROID'],
        }),
        getDisbursementList: builder.query<any, string>({
            query: (applId) => `interestratefixation/getDisbursementlist/${applId}`,
            providesTags: ['ROID']
        }),
        saveDisbursement: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/savedisbursement`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['ROID'],
        }),
        getPresentProposal: builder.query<any, string>({
            query: (irfId) => `interestratefixation/getpresentproposal/${irfId}`,
            providesTags: ['PresentProposal']
        }),
        savePresentProposal: builder.mutation<any, any>({
            query: (data) => ({
                url: `interestratefixation/savepresentproposal`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['PresentProposal'],
        }),
        getSidbiExposure: builder.query<any, string>({
            query: (irfId) => `interestratefixation/getsidbiexposure/${irfId}`,
            providesTags: ['SidbiExposure']
        }),
        saveSidbiExposure: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/savesidbiexposure`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['SidbiExposure'],
        }),
        getSanctionRating: builder.query<any, string>({
            query: (irfId) => `interestratefixation/getsanctionrating/${irfId}`,
            providesTags: ['SanctionRating']
        }),
        saveSanctionRating: builder.mutation<any, any>({
            query: (data) => ({
                url: `interestratefixation/savesanctionrating`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['SanctionRating'],
        }),
        getApprovedStructure: builder.query<any, string>({
            query: (irfId) => `interestratefixation/getapprovedintrate/${irfId}`,
            providesTags: ['ApprovedStructure']
        }),
        saveApprovedStructure: builder.mutation<any, any>({
            query: (data) => ({
                url: `interestratefixation/saveapprovedintrate`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['ApprovedStructure'],
        }),
        getapplprestproposal: builder.query<any, string>({
            query: (irfId) => `interestratefixation/getapplprestproposal/${irfId}`,
            providesTags: ['ApprovedStructurePresent']
        }),
        saveApplPrestProposal: builder.mutation<any, any>({
            query: (data) => ({
                url: `interestratefixation/saveapplprestproposal`,
                method: 'POST',
                body: [data],
            }),
            invalidatesTags: ['ApprovedStructurePresent'],
        }),
        getCompanyRateRequest: builder.query<any, string>({
            query: (irfId) => `interestratefixation/getcomprequestrate/${irfId}`,
            providesTags: ['CompanyRateRequest']
        }),
        saveCompanyRateRequest: builder.mutation<any, any>({
            query: (data) => ({
                url: `interestratefixation/savecomprequestrate`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['CompanyRateRequest'],
        }),
        getMemorandumTxt: builder.query<any, string>({
            query: (irfId) => `interestratefixation/getmemorandumtxt/${irfId}`,
            providesTags: ['interesetComment']
        }),
        saveMemorandumTxt: builder.mutation<any, any>({
            query: (data) => ({
                url: `interestratefixation/savememorandumtxt`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['interesetComment'],
        }),
        getRecommendations: builder.query<any, string>({
            query: (irfId) => `interestratefixation/getrecommendations/${irfId}`,
            providesTags: ['Recommendations']
        }),
        saveRecommendations: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/saverecommendations`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['Recommendations'],
        }),
    }),
});

export const {
    useGetFixationInterestRateQuery,
    useSaveInternalRatingMutation,
    useGetInternalRatingPresentQuery,
    useGetInternalRatingSanctionQuery,
    useGetExternalRatingSanctionQuery,
    useGetExternalRatingPresentQuery,
    useSaveExternalRatingMutation,
    useGetDisbursementListQuery,
    useGetResetlistQuery,
    useSaveDisbursementMutation,
    useSaveResetMutation,
    useGetPresentProposalQuery,
    useSavePresentProposalMutation,
    useGetSidbiExposureQuery,
    useSaveSidbiExposureMutation,
    useGetSanctionRatingQuery,
    useSaveSanctionRatingMutation,
    useGetApprovedStructureQuery,
    useSaveApprovedStructureMutation,
    useSaveApplPrestProposalMutation,
    useGetapplprestproposalQuery,
    useGetCompanyRateRequestQuery,
    useSaveCompanyRateRequestMutation,
    useGetMemorandumTxtQuery,
    useSaveMemorandumTxtMutation,
    useGetRecommendationsQuery,
    useSaveRecommendationsMutation
} = interestRateFixationApi;
















curl -X 'POST' \
  'http://localhost:8080/refapi/interestratefixation/saveapprovedintrate' \
  -H 'accept: */*' \
  -H 'Content-Type: application/json' \
  -d '{
  "irfId": "string",
  "interestRate": "string",
  "approvedStructure": 0,
  "discretionaryPower": "string",
  "saveStatus": "string"
}'

http://localhost:8080/refapi/interestratefixation/saveapprovedintrate

import {
    Accordion,
    AccordionSummary,
    AccordionDetails,
    Tabs,
    Typography,
    TextField,
    FormControl,
    InputLabel,
    MenuItem,
    Select,
    SelectChangeEvent,
    Autocomplete,
    Table,
    TableBody,
    TableHead,
    TableRow,
    TableCell,
    Button
} from "@mui/material";
import React, { memo } from "react";
import Tab from "@mui/material/Tab";
import Box from "@mui/material/Box";
import Section from "../../nbfc/Section";
import { useParams } from "react-router-dom";
import Workflow from "../../workflow/Workflow";
import { useAppSelector } from "../../../app/hooks";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
import ReviewOfNBFC from "../../monitoringPages/reviewModule/ReviewOfNBFC/ReviewOfNBFC";
import MonitoringExternalRating from "../../monitoringPages/reviewModule/MonitoringExternalRating/MonitoringExternalRating";
import ComplianceToPCAFramwork from "../../monitoringPages/reviewModule/complianceToPca/ComplianceToPCAFramwork";
import CriticalEvents from "../../monitoringPages/reviewModule/CriticalEvents/CriticalEvents";
import AnyOtherPendingComments from "../../monitoringPages/reviewModule/AnyOtherPendingComments/AnyOtherPendingComments";
import FinancialTable from "../common-components/FinancialTable";
import { RfBriefBackground } from "./RfBriefBackground";
import RfInternalRating from "./RfInternalRating";
import RfExternalRating from "./RfExternalRating";
import RfRateOfInterest from "./RfRateOfInterest";
import PresentProposal from "./PresentProposal";
import ExternalRatingProposal from "./ExternalRatingProposal";
interface TabPanelProps {
    children?: React.ReactNode;
    index: number;
    value: number;
}

function CustomTabPanel(props: Readonly<TabPanelProps>) {
    const { children, value, index, ...other } = props;

    return (
        <div
            role="tabpanel"
            hidden={value !== index}
            id={`simple-tabpanel-${index}`}
            aria-labelledby={`simple-tab-${index}`}
            {...other}
        >
            {value === index && <Box sx={{ p: 3 }}>{children}</Box>}
        </div>
    );
}

function a11yProps(index: number) {
    return {
        id: `simple-tab-${index}`,
        "aria-controls": `simple-tabpanel-${index}`,
    };
}

const InteresetRateFixation = () => {
    const [value, setValue] = React.useState(0);
    const { id } = useParams();
    console.log("id", id);
    const { applId } = useAppSelector((state: { userStore: any; }) => state.userStore);

    const [expanded, setExpanded] = React.useState("");
    const onOpenChange =
        (panel: any) => (event: React.SyntheticEvent, isExpanded: any) => {
            setExpanded(isExpanded ? panel : false);
        };

    const handleChange = (event: React.SyntheticEvent, newValue: number) => {
        setValue(newValue);
    };

    const [borrower, setBorrower] = React.useState('');

    const handleChangeBrw = (event: SelectChangeEvent) => {
        setBorrower(event.target.value);
    };

    const topBorrowers = [
        { label: 'Borrower 1', nbfcId: 1 },
        { label: 'Borrower 2', nbfcId: 2 },
        { label: 'Borrower 3', nbfcId: 3 },
        { label: 'Borrower 4', nbfcId: 4 },
    ];

    const topSchemes = [
        { label: 'Scheme of refinance to nbfcs', schCd: 'a' },
        { label: 'Scheme 2', schCd: 'b' },
        { label: 'Scheme 3', schCd: 'c' },
        { label: 'Scheme 4', schCd: 'd' },
        { label: 'Scheme 5', schCd: 'e' },
        { label: "Scheme 6", schCd: 'f' }
    ];

    const options = [
        { label: "Excellent", value: "Excellent" },
        { label: "Good", value: "Good" },
        { label: "Satisfactory", value: "Satisfactory" },
        { label: "Moderate", value: "Moderate" },
        { label: "Poor", value: "Poor" },
        { label: "Default", value: "Default" },
    ];

    const dummyLoanAccounts: any[] = [
        {
            id: 1, loanAccountNo: '000405007899', DisbDate: '30/04/2025', DisbAmt: 250, osAmount: 250,
            currentROI: '4.75', benchmark: "Benchmark will be here", fixedORFloating: 4, resetClause: 'Reset Clause here',
            loanStatus: 'Approved'
        },
        {
            id: 2, loanAccountNo: '000405007877', DisbDate: '30/04/2025', DisbAmt: 250, osAmount: 250,
            currentROI: '4.75', benchmark: "Benchmark will be here", fixedORFloating: 4, resetClause: 'Reset Clause here',
            loanStatus: 'Approved'
        }
    ];

    return (
        <div className="wrap-appraisal-area ">
            <Section>
                <div className="inner-top-heading">
                    <Typography
                        className="wrap-bold"
                        noWrap
                        variant="subtitle1"
                        component="div"
                        width={'50%'}
                    >
                        <h6 className="title ps-1">Non REF Disb Time Fixing</h6>
                    </Typography>
                </div>

                <Box className="wrap-tabs" sx={{ width: "100%" }}>
                    <Box sx={{ borderBottom: 1, borderColor: "divider" }}>
                        <Tabs
                            className="tabs-header"
                            value={value}
                            onChange={handleChange}
                            aria-label="basic tabs example"
                        >
                            <Tab
                                className="tab-ui"
                                label="Fixing of Interest Rate"
                                {...a11yProps(0)}
                            />
                            <Tab className="tab-ui" label="Financial" {...a11yProps(1)} />
                            <Tab className="tab-ui" label="Work Flow " {...a11yProps(2)} />
                        </Tabs>
                    </Box>
                    <CustomTabPanel value={value} index={0}>
                        <div className="wrap-appraisal-area">
                            <Section>
                                <div className="wrap-accordian custome-form text_count pt-3">
                                    {/* __________Issue under consideration___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panelX"}
                                        onChange={onOpenChange("panelX")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panelX-content"
                                            id="panelX-header"
                                        >
                                            Issue Under Consideration
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <div className="alnSet fldsSizeCstm">
                                                Fixation of Interest rate for disbursement of
                                                <FormControl sx={{ m: 1, minWidth: 160 }} size="small">
                                                    <InputLabel id="">Select</InputLabel>
                                                    <Select
                                                        labelId=""
                                                        id=""
                                                        value={borrower}
                                                        label="Borrower"
                                                        onChange={handleChangeBrw}
                                                    >
                                                        <MenuItem value={0}>One</MenuItem>
                                                        <MenuItem value={1}>Two</MenuItem>
                                                        <MenuItem value={1}>Three</MenuItem>
                                                    </Select>
                                                </FormControl> tranche of <TextField
                                                    label="Sanctioned Amount"
                                                    id=""
                                                    size="small" className="fnt_sml"
                                                />
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Background___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel2X"}
                                        onChange={onOpenChange("panel2X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel2X-content"
                                            id="panel2X-header"
                                        >
                                            Brief Background
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <RfBriefBackground irfId="121" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________External Rating___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel20X"}
                                        onChange={onOpenChange("panel20X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel20X-content"
                                            id="panel20X-header"
                                        >
                                            External Rating
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <RfExternalRating irfId="N000122" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Internal Rating___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel21X"}
                                        onChange={onOpenChange("panel21X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel21X-content"
                                            id="panel21X-header"
                                        >
                                            Internal Rating
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <RfInternalRating applId="N000122" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Rate of Interest___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel22X"}
                                        onChange={onOpenChange("panel22X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel22X-content"
                                            id="panel22X-header"
                                        >
                                            Rate of Interest
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <RfRateOfInterest irfId="N000122" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Present Proposal___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel3X"}
                                        onChange={onOpenChange("panel3X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel3X-content"
                                            id="panel3X-header"
                                        >
                                            Present Proposal
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <PresentProposal irfId="N000122" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________External Rating Proposal___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel4X"}
                                        onChange={onOpenChange("panel4X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel4X-content"
                                            id="panel4X-header"
                                        >
                                            External Rating Proposal
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <ExternalRatingProposal irfId="N000121" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Approved Interest rate structure of the Bank___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel5X"}
                                        onChange={onOpenChange("panel5X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel5X-content"
                                            id="panel5X-header"
                                        >
                                            Approved Interest rate structure of the Bank
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <div className="wrap-inner-table mt-0">
                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table">
                                                    <TableHead>
                                                        <TableRow>
                                                            <TableCell style={{ width: '6%' }}><b>Sr. No.</b></TableCell>
                                                            <TableCell style={{ width: '20%' }}><b>Particulars</b></TableCell>
                                                            <TableCell><b>Remarks</b></TableCell>
                                                        </TableRow>
                                                    </TableHead>

                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>a</TableCell>
                                                            <TableCell>Interest rate / reset structure approval by</TableCell>
                                                            <TableCell>
                                                                <div className="alnSet">
                                                                    RiMV vide circular no. 49/ 2024-25 dated January 09, 2025
                                                                </div>
                                                            </TableCell>
                                                        </TableRow>

                                                        <TableRow>
                                                            <TableCell>b</TableCell>
                                                            <TableCell>Approved Structure</TableCell>
                                                            <TableCell>
                                                                <p>For AAA/ Upper Layer NBFC - FIMMDA daily yield matrix for NBFC + SIDBI spread of 30 bps over and above FIMMDA benchmark and spread.</p>
                                                                <p><b>Others -</b> Internal score based & MCLR linked</p>
                                                                <TextField
                                                                    label="Approved Structure"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>

                                                        <TableRow>
                                                            <TableCell>c</TableCell>
                                                            <TableCell>Discretionary Power</TableCell>
                                                            <TableCell>
                                                                <p>Sub Committee of ALCO - 25 bps and ALCO for discretion beyond 25 bps.</p>
                                                                <TextField
                                                                    label="Discretionary Power"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>

                                                {/* ____________Interest Rate applicable for present proposal_____________________ */}
                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table" className="mt-4">
                                                    <TableHead>
                                                        <TableRow>
                                                            <TableCell colSpan={6}>
                                                                <h6><b>Interest Rate applicable for present proposal</b></h6>
                                                            </TableCell>
                                                        </TableRow>
                                                        <TableRow>
                                                            <TableCell colSpan={6}>
                                                                <b>MCLR</b>
                                                            </TableCell>
                                                        </TableRow>
                                                        <TableRow>
                                                            <TableCell style={{ width: '9%' }}><b>1 Y MCLR (%)</b></TableCell>
                                                            <TableCell><b>Base spread</b></TableCell>
                                                            <TableCell><b>Internal Score</b></TableCell>
                                                            <TableCell><b>Internal Score Linked Spread</b></TableCell>
                                                            <TableCell><b>Total Spread</b></TableCell>
                                                            <TableCell><b>Applicable Rate (%)</b></TableCell>
                                                        </TableRow>
                                                    </TableHead>
                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>
                                                                <TextField
                                                                    label="%"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Base spread"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Internal Score"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Internal Score Linked Spread"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Total Spread"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Applicable Rate (%)"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>

                                                {/* ____________Fixed_____________________ */}
                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table" className="mt-4">
                                                    <TableHead>
                                                        <TableRow>
                                                            <TableCell colSpan={12}>
                                                                <b>Fixed</b>
                                                            </TableCell>
                                                        </TableRow>
                                                        <TableRow>
                                                            <TableCell><b>Rating Grade</b></TableCell>
                                                            <TableCell><b>Daily yield matrix as on </b></TableCell>
                                                            <TableCell><b>Tenure</b></TableCell>
                                                            <TableCell><b>FIMMDA yield for AAA rated NBFCs (Benchmark)</b></TableCell>
                                                            <TableCell><b>FIMMDA Spread</b></TableCell>
                                                            <TableCell><b>SIDBI Spread</b></TableCell>
                                                            <TableCell><b>Total Spread</b></TableCell>
                                                            <TableCell><b>Minimum Interest Rate </b></TableCell>
                                                            <TableCell><b>Minimum interest rate as per TRMV guidance / date </b></TableCell>
                                                            <TableCell><b>Final Rate</b></TableCell>
                                                        </TableRow>
                                                    </TableHead>
                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Rating Grade"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Daily yield matrix as on"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Tenure"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="FIMMDA yield for AAA rated NBFCs"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="FIMMDA Spread"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="SIDBI Spread"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Total Spread"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Minimum Interest Rate"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Minimum interest rate as per TRMV guidance / date"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Final Rate"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>

                                                {/* ____________T-bill_____________________ */}
                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table" className="mt-4">
                                                    <TableHead>
                                                        <TableRow>
                                                            <TableCell colSpan={12}>
                                                                <b>T-bill</b>
                                                            </TableCell>
                                                        </TableRow>
                                                        <TableRow>
                                                            <TableCell><b>Rating Grade</b></TableCell>
                                                            <TableCell><b>Benchmark as on</b></TableCell>
                                                            <TableCell><b>Benchmark</b></TableCell>
                                                            <TableCell><b>Benchmark Rate</b></TableCell>
                                                            <TableCell><b>Rating Spread (%)</b></TableCell>
                                                            <TableCell><b>SIDBI Spread</b></TableCell>
                                                            <TableCell><b>Total Spread</b></TableCell>
                                                            <TableCell><b>Minimum Interest Rate </b></TableCell>
                                                            <TableCell><b>Minimum interest rate as per TRMV guidance / date</b></TableCell>
                                                            <TableCell><b>Final Rate</b></TableCell>
                                                        </TableRow>
                                                    </TableHead>
                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Rating Grade"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Benchmark as on"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Benchmark"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Benchmark Rate"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="(%)"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="SIDBI Spread"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Total Spread"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Minimum Interest Rate"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="interest Rate"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Final Rate"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>

                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table" className="mt-4">
                                                    <TableHead>
                                                        <TableRow>
                                                            <TableCell colSpan={12}>
                                                                <b>Comments</b>
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableHead>
                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Comments"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Rate requested by the company___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel6X"}
                                        onChange={onOpenChange("panel6X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel6X-content"
                                            id="panel6X-header"
                                        >
                                            Rate Requested by the Company
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <TextField
                                                label="Rate Requested by the Company"
                                                id=""
                                                size="small" className="fnt_sml"
                                            />
                                            <div className="wrap-inner-table mt-4">
                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table">
                                                    <TableHead>
                                                        <TableRow>
                                                            <TableCell><b>Lender/Instrument </b></TableCell>
                                                            <TableCell><b>Facility Type </b></TableCell>
                                                            <TableCell><b>Date of Availment </b></TableCell>
                                                            <TableCell><b>Sanctioned Amount (crore) </b></TableCell>
                                                            <TableCell><b>Interest Rate </b></TableCell>
                                                            <TableCell><b>Tenure  </b></TableCell>
                                                        </TableRow>
                                                    </TableHead>
                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Lender/Instrument"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <FormControl sx={{ m: 1, minWidth: 120 }} size="small">
                                                                    <InputLabel id="">Select</InputLabel>
                                                                    <Select
                                                                        labelId=""
                                                                        id=""
                                                                        value={borrower}
                                                                        label="Borrower"
                                                                        onChange={handleChangeBrw}
                                                                    >
                                                                        <MenuItem value={0}>One</MenuItem>
                                                                        <MenuItem value={1}>Two</MenuItem>
                                                                    </Select>
                                                                </FormControl>
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Date of Availment "
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Sanctioned Amount"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Interest Rate "
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Tenure"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Recommendation___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel7X"}
                                        onChange={onOpenChange("panel7X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel7X-content"
                                            id="panel7X-header"
                                        >
                                            Recommendation
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <TextField
                                                label="Recommendation"
                                                id=""
                                                size="small" className="fnt_sml"
                                            />
                                            <div className="wrap-inner-table mt-4">
                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table">
                                                    <TableHead>
                                                        <TableRow>
                                                            <TableCell colSpan={8}><b>Interest Rate</b></TableCell>
                                                        </TableRow>
                                                        <TableRow>
                                                            <TableCell><b>Scheme</b></TableCell>
                                                            <TableCell><b>Amount(`crore)</b></TableCell>
                                                            <TableCell><b>Tenure</b></TableCell>
                                                            <TableCell><b>Applicable Rate </b></TableCell>
                                                            <TableCell><b>Discretion (%)</b></TableCell>
                                                            <TableCell><b>ROI Recommended </b></TableCell>
                                                            <TableCell><b>Reset Clause</b></TableCell>
                                                            <TableCell><b>Next Reset Date</b></TableCell>
                                                        </TableRow>
                                                    </TableHead>
                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Scheme"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Amount"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Tenure"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Applicable Rate"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Discretion %"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="ROI Recommended"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <FormControl sx={{ m: 1, minWidth: 120 }} size="small">
                                                                    <InputLabel id="">Select</InputLabel>
                                                                    <Select
                                                                        labelId=""
                                                                        id=""
                                                                        value={borrower}
                                                                        label="Borrower"
                                                                        onChange={handleChangeBrw}
                                                                    >
                                                                        <MenuItem value={0}>One</MenuItem>
                                                                        <MenuItem value={1}>Two</MenuItem>
                                                                    </Select>
                                                                </FormControl>
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Next Reset Date"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Validity of Interest rate___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel8X"}
                                        onChange={onOpenChange("panel8X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel8X-content"
                                            id="panel8X-header"
                                        >
                                            Validity of Interest Rate
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <div className="wrap-inner-table mt-0">
                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table">
                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Date"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________DoP___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel9X"}
                                        onChange={onOpenChange("panel9X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel9X-content"
                                            id="panel9X-header"
                                        >
                                            DoP
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <div className="wrap-inner-table mt-0">
                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table">
                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>
                                                                <FormControl sx={{ m: 1, minWidth: 120 }} size="small">
                                                                    <InputLabel id="">Select</InputLabel>
                                                                    <Select
                                                                        labelId=""
                                                                        id=""
                                                                        value={borrower}
                                                                        label="Borrower"
                                                                        onChange={handleChangeBrw}
                                                                    >
                                                                        <MenuItem value={0}>One</MenuItem>
                                                                        <MenuItem value={1}>Two</MenuItem>
                                                                    </Select>
                                                                </FormControl>
                                                            </TableCell>
                                                        </TableRow>
                                                        <TableRow>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Comments"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Discretionary Powers___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel10X"}
                                        onChange={onOpenChange("panel10X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel10X-content"
                                            id="panel10X-header"
                                        >
                                            Discretionary Powers
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <div className="wrap-inner-table mt-0">
                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table">
                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Discretionary Powers"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>
                                </div>
                            </Section>
                        </div>
                    </CustomTabPanel>
                    <CustomTabPanel value={value} index={1}>
                        <div className="wrap-appraisal-area">
                            <Section>
                                <div className="wrap-accordian custome-form text_count pt-3">
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panelX"}
                                        onChange={onOpenChange("panelX")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panelX-content"
                                            id="panelX-header"
                                        >
                                            Financial
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <div className="wrap-inner-table mt-0">
                                                <FinancialTable />
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>
                                </div>
                            </Section>
                        </div>
                    </CustomTabPanel>
                    <CustomTabPanel value={value} index={2}>
                        <Workflow formIdVal={applId} formTypeVal={"PREVISIT"} />
                    </CustomTabPanel>
                </Box>
            </Section>
        </div>
    );
};

export default memo(InteresetRateFixation);

import React, { useState } from 'react';
import { Table, TableBody, TableCell, TableHead, TableRow, Button } from "@mui/material";
import { Formik, Form } from 'formik';
import * as Yup from 'yup';
import { useGetPresentProposalQuery, useSavePresentProposalMutation } from '../../../features/monitoring/interestRateFixationApi';

import NbfcSnackbar from '../../../components/shared/NbfcSnackbar';
import AutoSave from '../../../components/framework/AutoSave';
import { TextAreaField } from '../../../components/framework/TextAreaAuto';

const PresentProposal = ({ irfId }: { irfId: string }) => {
  const { data: presentProposal, isLoading } = useGetPresentProposalQuery(irfId, {
    skip: !irfId,
    refetchOnMountOrArgChange: true,
  });

  const [savePresentProposal] = useSavePresentProposalMutation();

  const [openSnackbar, setOpenSnackbar] = useState(false);
  const [snackMsg, setSnackMsg] = useState("");
  const [severity, setSeverity] = useState<"success" | "error">("success");

  const initialValues = presentProposal || {
    disbProposed: '',
    lastDisb: '',
    changeInternalScore: '',
    lastAlmDisb: '',
    periodicCompliance: '',
    pendingIssue: '',
    otherComments: '',
  };

  const validationSchema = Yup.object().shape({
    disbProposed: Yup.string().required('Required'),
    lastDisb: Yup.string().required('Required'),
    changeInternalScore: Yup.string().required('Required'),
    lastAlmDisb: Yup.string().required('Required'),
    periodicCompliance: Yup.string().required('Required'),
    pendingIssue: Yup.string().required('Required'),
    otherComments: Yup.string().required('Required'),
  });

  const handleSubmit = async (values: any) => {
    try {
      const dataToSave = {
        ...values,
        irfId,
        saveStatus: '01',
      };
      await savePresentProposal(dataToSave).unwrap();
      setOpenSnackbar(true);
      setSeverity("success");
      setSnackMsg("Present Proposal saved successfully");
    } catch (error) {
      console.error("Error saving present proposal:", error);
      setOpenSnackbar(true);
      setSeverity("error");
      setSnackMsg("Failed to save Present Proposal");
    }
  };

  const handleSnackClose = () => {
    setOpenSnackbar(false);
  };

  if (isLoading) {
    return <p>Loading...</p>;
  }

  return (
    <div className="wrap-inner-table mt-0">
      <Formik
        initialValues={initialValues}
        validationSchema={validationSchema}
        onSubmit={handleSubmit}
        enableReinitialize={true}
      >
        {({ values }) => (
          <Form>
            <AutoSave debounceMs={2000} values={values} handleSubmit={handleSubmit} />
            <Table sx={{ minWidth: 650 }} aria-label="present proposal table">
              <TableHead>
                <TableRow>
                  <TableCell style={{ width: '6%' }}><b>Sr. No.</b></TableCell>
                  <TableCell style={{ width: '30%' }}><b>Particulars</b></TableCell>
                  <TableCell><b>Remarks</b></TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                <TableRow>
                  <TableCell>1</TableCell>
                  <TableCell>Disbursement proposed now</TableCell>
                  <TableCell>
                    <TextAreaField name="disbProposed" label="" maxLength={500} disabled={false} />
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>2</TableCell>
                  <TableCell>Any change in financials from the time of last disbursement</TableCell>
                  <TableCell>
                    <TextAreaField name="lastDisb" label="" maxLength={1000} disabled={false} />
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>3</TableCell>
                  <TableCell>Any change in Internal score from that at the time of sanction</TableCell>
                  <TableCell>
                    <TextAreaField name="changeInternalScore" label="" maxLength={1000} disabled={false} />
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>4</TableCell>
                  <TableCell>Latest ALM position (any changes from that of last disbursement) / <b>LCR</b></TableCell>
                  <TableCell>
                    <TextAreaField name="lastAlmDisb" label="" maxLength={1000} disabled={false} />
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>5</TableCell>
                  <TableCell>Status of periodic compliances</TableCell>
                  <TableCell>
                    <TextAreaField name="periodicCompliance" label="" maxLength={1000} disabled={false} />
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>6</TableCell>
                  <TableCell>Any other pending issue</TableCell>
                  <TableCell>
                    <TextAreaField name="pendingIssue" label="" maxLength={1000} disabled={false} />
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>7</TableCell>
                  <TableCell>Any other comments</TableCell>
                  <TableCell>
                    <TextAreaField name="otherComments" label="" maxLength={1000} disabled={false} />
                  </TableCell>
                </TableRow>
              </TableBody>
            </Table>
            <Button type="submit" variant="contained" color="primary" className="mt-2">
              Save
            </Button>
          </Form>
        )}
      </Formik>
      <NbfcSnackbar
        open={openSnackbar}
        msg={snackMsg}
        severity={severity}
        handleSnackClose={handleSnackClose}
        submitCall={false}
      />
    </div>
  );
};

export default PresentProposal;

import { createApi } from "@reduxjs/toolkit/query/react";
import { customBaseQuery } from "../../app/commonApi";

export const interestRateFixationApi = createApi({
    reducerPath: 'interestRateFixationApi',
    baseQuery: customBaseQuery,
    tagTypes: ['BriefBackground', 'InternalRating', 'ExternalRating', 'ROID', 'ROIR','PresentProposal', 'SidbiExposure', 'SanctionRating'],
    endpoints: (builder) => ({
        getFixationInterestRate: builder.query<any, string>({
            query: (applId) => `interestratefixation/getfixationinterestrate/${applId}`,
            providesTags: ['BriefBackground']
        }),
        saveInternalRating: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/saveinternalrating`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['InternalRating'],
        }),
        getInternalRatingPresent: builder.query<any, string>({
            query: (applId) => `interestratefixation/getinternalratingpresent/${applId}`,
            providesTags: ['InternalRating']
        }),
        getInternalRatingSanction: builder.query<any, string>({
            query: (applId) => `interestratefixation/getinternalratingsanction/${applId}`,
            providesTags: ['InternalRating']
        }),
        getExternalRatingSanction: builder.query<any, string>({
            query: (applId) => `interestratefixation/getexternalratingsanction/${applId}`,
            providesTags: ['ExternalRating']
        }),
        getExternalRatingPresent: builder.query<any, string>({
            query: (applId) => `interestratefixation/getexternalratingpresent/${applId}`,
            providesTags: ['ExternalRating']
        }),
        saveExternalRating: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/saveexternalrating`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['ExternalRating'],
        }),
        getResetlist: builder.query<any, string>({
            query: (applId) => `interestratefixation/getresetlist/${applId}`,
            providesTags: ['ROIR']
        }),
        saveReset: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/savereset`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['ROID'],
        }),
        getDisbursementList: builder.query<any, string>({
            query: (applId) => `interestratefixation/getDisbursementlist/${applId}`,
            providesTags: ['ROID']
        }),
        saveDisbursement: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/savedisbursement`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['ROID'],
        }),
        getPresentProposal: builder.query<any, string>({
            query: (applId) => `interestratefixation/getpresentproposal/${applId}`,
            providesTags: ['PresentProposal']
        }),
        savePresentProposal: builder.mutation<any, any>({
            query: (data) => ({
                url: `interestratefixation/savepresentproposal`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['PresentProposal'],
        }),
        // New APIs for SIDBI Exposure and Sanction Rating
        getSidbiExposure: builder.query<any, string>({
            query: (irfId) => `interestratefixation/getsidbiexposure/${irfId}`,
            providesTags: ['SidbiExposure']
        }),
        saveSidbiExposure: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/savesidbiexposure`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['SidbiExposure'],
        }),
        getSanctionRating: builder.query<any, string>({
            query: (irfId) => `interestratefixation/getsanctionrating/${irfId}`,
            providesTags: ['SanctionRating']
        }),
        saveSanctionRating: builder.mutation<any, any>({
            query: (data) => ({
                url: `interestratefixation/savesanctionrating`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['SanctionRating'],
        }),
    }),
});

export const {
    useGetFixationInterestRateQuery,
    useSaveInternalRatingMutation,
    useGetInternalRatingPresentQuery,
    useGetInternalRatingSanctionQuery,
    useGetExternalRatingSanctionQuery,
    useGetExternalRatingPresentQuery,
    useSaveExternalRatingMutation,
    useGetDisbursementListQuery,
    useGetResetlistQuery,
    useSaveDisbursementMutation,
    useSaveResetMutation,
    useGetPresentProposalQuery,
    useSavePresentProposalMutation,
    useGetSidbiExposureQuery,
    useSaveSidbiExposureMutation,
    useGetSanctionRatingQuery,
    useSaveSanctionRatingMutation,
} = interestRateFixationApi;


