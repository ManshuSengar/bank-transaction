import React, { useState } from 'react';
import { Table, TableBody, TableCell, TableHead, TableRow, Button } from "@mui/material";
import { Formik, Form } from 'formik';
import * as Yup from 'yup';
import { useGetApplPrestProposalQuery, useSaveApplPrestProposalMutation } from '../../../features/monitoring/interestRateFixationApi';
import NbfcSnackbar from '../../../components/shared/NbfcSnackbar';
import { AdvanceTextBoxField } from '../../../components/framework/AdvanceTextBoxField';
import { AdvanceDatePickerField } from '../../../components/framework/EnhancedComponents';
import { EnhancedDropDown } from '../../../components/framework/EnhancedDropDown';

const InterestRateApplicable = ({ irfId }) => {
  const { data: proposalData, isLoading } = useGetApplPrestProposalQuery(irfId, {
    skip: !irfId,
    refetchOnMountOrArgChange: true,
  });

  const [saveApplPrestProposal] = useSaveApplPrestProposalMutation();

  const [openSnackbar, setOpenSnackbar] = useState(false);
  const [snackMsg, setSnackMsg] = useState("");
  const [severity, setSeverity] = useState("success");

  const initialValues = proposalData || {
    proposalType: '',
    mclr: '',
    ratingSpread: '',
    intScore: '',
    intScoreLink: '',
    totalSpread: '',
    finalRate: '',
    grade: '',
    benchmarkAsOn: '',
    tenure: '',
    benchmark: '',
    benchmarkRate: '',
    sidbiSpread: '',
    minIntRate: '',
    minIntRateTrmv: '',
    comments: '',
  };

  const validationSchema = Yup.object().shape({
    proposalType: Yup.string().required('Required'),
    comments: Yup.string(),
    mclr: Yup.string().when('proposalType', {
      is: 'MCLR',
      then: Yup.string().required('Required'),
    }),
    ratingSpread: Yup.string().when('proposalType', {
      is: 'MCLR',
      then: Yup.string().required('Required'),
    }),
    intScore: Yup.string().when('proposalType', {
      is: 'MCLR',
      then: Yup.string().required('Required'),
    }),
    intScoreLink: Yup.string().when('proposalType', {
      is: 'MCLR',
      then: Yup.string().required('Required'),
    }),
    totalSpread: Yup.string().when('proposalType', {
      is: 'MCLR',
      then: Yup.string().required('Required'),
    }),
    finalRate: Yup.string().when('proposalType', {
      is: 'MCLR',
      then: Yup.string().required('Required'),
    }),
    grade: Yup.string().when('proposalType', {
      is: 'Fixed',
      then: Yup.string().required('Required'),
    }),
    benchmarkAsOn: Yup.string().when('proposalType', {
      is: 'Fixed',
      then: Yup.string().required('Required'),
    }),
    tenure: Yup.string().when('proposalType', {
      is: 'Fixed',
      then: Yup.string().required('Required'),
    }),
    benchmarkRate: Yup.string().when('proposalType', {
      is: 'Fixed',
      then: Yup.string().required('Required'),
    }),
    ratingSpread: Yup.string().when('proposalType', {
      is: 'Fixed',
      then: Yup.string().required('Required'),
    }),
    sidbiSpread: Yup.string().when('proposalType', {
      is: 'Fixed',
      then: Yup.string().required('Required'),
    }),
    totalSpread: Yup.string().when('proposalType', {
      is: 'Fixed',
      then: Yup.string().required('Required'),
    }),
    minIntRate: Yup.string().when('proposalType', {
      is: 'Fixed',
      then: Yup.string().required('Required'),
    }),
    minIntRateTrmv: Yup.string().when('proposalType', {
      is: 'Fixed',
      then: Yup.string().required('Required'),
    }),
    finalRate: Yup.string().when('proposalType', {
      is: 'Fixed',
      then: Yup.string().required('Required'),
    }),
    grade: Yup.string().when('proposalType', {
      is: 'T-bill',
      then: Yup.string().required('Required'),
    }),
    benchmarkAsOn: Yup.string().when('proposalType', {
      is: 'T-bill',
      then: Yup.string().required('Required'),
    }),
    benchmark: Yup.string().when('proposalType', {
      is: 'T-bill',
      then: Yup.string().required('Required'),
    }),
    benchmarkRate: Yup.string().when('proposalType', {
      is: 'T-bill',
      then: Yup.string().required('Required'),
    }),
    ratingSpread: Yup.string().when('proposalType', {
      is: 'T-bill',
      then: Yup.string().required('Required'),
    }),
    sidbiSpread: Yup.string().when('proposalType', {
      is: 'T-bill',
      then: Yup.string().required('Required'),
    }),
    totalSpread: Yup.string().when('proposalType', {
      is: 'T-bill',
      then: Yup.string().required('Required'),
    }),
    minIntRate: Yup.string().when('proposalType', {
      is: 'T-bill',
      then: Yup.string().required('Required'),
    }),
    minIntRateTrmv: Yup.string().when('proposalType', {
      is: 'T-bill',
      then: Yup.string().required('Required'),
    }),
    finalRate: Yup.string().when('proposalType', {
      is: 'T-bill',
      then: Yup.string().required('Required'),
    }),
  });

  const handleSubmit = async (values) => {
    try {
      const dataToSave = {
        ...values,
        irfId,
        saveStatus: '01',
      };
      await saveApplPrestProposal(dataToSave).unwrap();
      setOpenSnackbar(true);
      setSeverity("success");
      setSnackMsg("Proposal saved successfully");
    } catch (error) {
      console.error("Error saving proposal:", error);
      setOpenSnackbar(true);
      setSeverity("error");
      setSnackMsg("Failed to save proposal");
    }
  };

  const handleSnackClose = () => {
    setOpenSnackbar(false);
  };

  if (isLoading) {
    return <p>Loading...</p>;
  }

  return (
    <div className="wrap-inner-table mt-0">
      <Formik
        initialValues={initialValues}
        validationSchema={validationSchema}
        onSubmit={handleSubmit}
        enableReinitialize={true}
      >
        {({ values }) => (
          <Form>
            <EnhancedDropDown
              label="Proposal Type"
              name="proposalType"
              customOptions={[
                { key: 'MCLR', value: 'MCLR', label: 'MCLR' },
                { key: 'Fixed', value: 'Fixed', label: 'Fixed' },
                { key: 'T-bill', value: 'T-bill', label: 'T-bill' },
              ]}
            />

            {values.proposalType === 'MCLR' && (
              <Table sx={{ minWidth: 650 }} aria-label="mclr table" className="mt-4">
                <TableHead>
                  <TableRow>
                    <TableCell colSpan={6}>
                      <h6><b>Interest Rate applicable for present proposal - MCLR</b></h6>
                    </TableCell>
                  </TableRow>
                  <TableRow>
                    <TableCell style={{ width: '9%' }}><b>1 Y MCLR (%)</b></TableCell>
                    <TableCell><b>Base spread</b></TableCell>
                    <TableCell><b>Internal Score</b></TableCell>
                    <TableCell><b>Internal Score Linked Spread</b></TableCell>
                    <TableCell><b>Total Spread</b></TableCell>
                    <TableCell><b>Applicable Rate (%)</b></TableCell>
                  </TableRow>
                </TableHead>
                <TableBody>
                  <TableRow>
                    <TableCell>
                      <AdvanceTextBoxField label="%" name="mclr" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Base spread" name="ratingSpread" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Internal Score" name="intScore" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Internal Score Linked Spread" name="intScoreLink" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Total Spread" name="totalSpread" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Applicable Rate (%)" name="finalRate" />
                    </TableCell>
                  </TableRow>
                </TableBody>
              </Table>
            )}

            {values.proposalType === 'Fixed' && (
              <Table sx={{ minWidth: 650 }} aria-label="fixed table" className="mt-4">
                <TableHead>
                  <TableRow>
                    <TableCell colSpan={10}>
                      <h6><b>Interest Rate applicable for present proposal - Fixed</b></h6>
                    </TableCell>
                  </TableRow>
                  <TableRow>
                    <TableCell><b>Rating Grade</b></TableCell>
                    <TableCell><b>Daily yield matrix as on</b></TableCell>
                    <TableCell><b>Tenure</b></TableCell>
                    <TableCell><b>FIMMDA yield for AAA rated NBFCs (Benchmark)</b></TableCell>
                    <TableCell><b>FIMMDA Spread</b></TableCell>
                    <TableCell><b>SIDBI Spread</b></TableCell>
                    <TableCell><b>Total Spread</b></TableCell>
                    <TableCell><b>Minimum Interest Rate</b></TableCell>
                    <TableCell><b>Minimum interest rate as per TRMV guidance / date</b></TableCell>
                    <TableCell><b>Final Rate</b></TableCell>
                  </TableRow>
                </TableHead>
                <TableBody>
                  <TableRow>
                    <TableCell>
                      <AdvanceTextBoxField label="Rating Grade" name="grade" />
                    </TableCell>
                    <TableCell>
                      <AdvanceDatePickerField label="Daily yield matrix as on" name="benchmarkAsOn" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Tenure" name="tenure" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="FIMMDA yield for AAA rated NBFCs" name="benchmarkRate" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="FIMMDA Spread" name="ratingSpread" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="SIDBI Spread" name="sidbiSpread" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Total Spread" name="totalSpread" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Minimum Interest Rate" name="minIntRate" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Minimum interest rate as per TRMV guidance / date" name="minIntRateTrmv" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Final Rate" name="finalRate" />
                    </TableCell>
                  </TableRow>
                </TableBody>
              </Table>
            )}

            {values.proposalType === 'T-bill' && (
              <Table sx={{ minWidth: 650 }} aria-label="tbill table" className="mt-4">
                <TableHead>
                  <TableRow>
                    <TableCell colSpan={10}>
                      <h6><b>Interest Rate applicable for present proposal - T-bill</b></h6>
                    </TableCell>
                  </TableRow>
                  <TableRow>
                    <TableCell><b>Rating Grade</b></TableCell>
                    <TableCell><b>Benchmark as on</b></TableCell>
                    <TableCell><b>Benchmark</b></TableCell>
                    <TableCell><b>Benchmark Rate</b></TableCell>
                    <TableCell><b>Rating Spread (%)</b></TableCell>
                    <TableCell><b>SIDBI Spread</b></TableCell>
                    <TableCell><b>Total Spread</b></TableCell>
                    <TableCell><b>Minimum Interest Rate</b></TableCell>
                    <TableCell><b>Minimum interest rate as per TRMV guidance / date</b></TableCell>
                    <TableCell><b>Final Rate</b></TableCell>
                  </TableRow>
                </TableHead>
                <TableBody>
                  <TableRow>
                    <TableCell>
                      <AdvanceTextBoxField label="Rating Grade" name="grade" />
                    </TableCell>
                    <TableCell>
                      <AdvanceDatePickerField label="Benchmark as on" name="benchmarkAsOn" />
                    </TableCell>
                    <TableCell>
                      <EnhancedDropDown label="Benchmark" name="benchmark" domain="mstr/getBenchMark" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Benchmark Rate" name="benchmarkRate" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Rating Spread (%)" name="ratingSpread" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="SIDBI Spread" name="sidbiSpread" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Total Spread" name="totalSpread" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Minimum Interest Rate" name="minIntRate" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Minimum interest rate as per TRMV guidance / date" name="minIntRateTrmv" />
                    </TableCell>
                    <TableCell>
                      <AdvanceTextBoxField label="Final Rate" name="finalRate" />
                    </TableCell>
                  </TableRow>
                </TableBody>
              </Table>
            )}

            <Table sx={{ minWidth: 650 }} aria-label="comments table" className="mt-4">
              <TableHead>
                <TableRow>
                  <TableCell colSpan={1}>
                    <b>Comments</b>
                  </TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                <TableRow>
                  <TableCell>
                    <AdvanceTextBoxField label="Comments" name="comments" multiline rows={4} />
                  </TableCell>
                </TableRow>
              </TableBody>
            </Table>

            <Button type="submit" variant="contained" color="primary" className="mt-2">
              Save
            </Button>
          </Form>
        )}
      </Formik>
      <NbfcSnackbar
        open={openSnackbar}
        msg={snackMsg}
        severity={severity}
        handleSnackClose={handleSnackClose}
        submitCall={false}
      />
    </div>
  );
};

export default InterestRateApplicable;











import { createApi } from "@reduxjs/toolkit/query/react";
import { customBaseQuery } from "../../app/commonApi";

export const interestRateFixationApi = createApi({
    reducerPath: 'interestRateFixationApi',
    baseQuery: customBaseQuery,
    tagTypes: [
        'BriefBackground', 
        'InternalRating', 
        'ExternalRating', 
        'ROID', 
        'ROIR', 
        'PresentProposal', 
        'SidbiExposure', 
        'SanctionRating', 
        'ApprovedStructure' // New tag for approved structure
    ],
    endpoints: (builder) => ({
        // Existing endpoints (unchanged)
        getFixationInterestRate: builder.query<any, string>({
            query: (applId) => `interestratefixation/getfixationinterestrate/${applId}`,
            providesTags: ['BriefBackground']
        }),
        saveInternalRating: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/saveinternalrating`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['InternalRating'],
        }),
        getInternalRatingPresent: builder.query<any, string>({
            query: (applId) => `interestratefixation/getinternalratingpresent/${applId}`,
            providesTags: ['InternalRating']
        }),
        getInternalRatingSanction: builder.query<any, string>({
            query: (applId) => `interestratefixation/getinternalratingsanction/${applId}`,
            providesTags: ['InternalRating']
        }),
        getExternalRatingSanction: builder.query<any, string>({
            query: (applId) => `interestratefixation/getexternalratingsanction/${applId}`,
            providesTags: ['ExternalRating']
        }),
        getExternalRatingPresent: builder.query<any, string>({
            query: (applId) => `interestratefixation/getexternalratingpresent/${applId}`,
            providesTags: ['ExternalRating']
        }),
        saveExternalRating: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/saveexternalrating`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['ExternalRating'],
        }),
        getResetlist: builder.query<any, string>({
            query: (applId) => `interestratefixation/getresetlist/${applId}`,
            providesTags: ['ROIR']
        }),
        saveReset: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/savereset`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['ROID'],
        }),
        getDisbursementList: builder.query<any, string>({
            query: (applId) => `interestratefixation/getDisbursementlist/${applId}`,
            providesTags: ['ROID']
        }),
        saveDisbursement: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/savedisbursement`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['ROID'],
        }),
        getPresentProposal: builder.query<any, string>({
            query: (irfId) => `interestratefixation/getpresentproposal/${irfId}`, // Updated to irfId for consistency
            providesTags: ['PresentProposal']
        }),
        savePresentProposal: builder.mutation<any, any>({
            query: (data) => ({
                url: `interestratefixation/savepresentproposal`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['PresentProposal'],
        }),
        getSidbiExposure: builder.query<any, string>({
            query: (irfId) => `interestratefixation/getsidbiexposure/${irfId}`,
            providesTags: ['SidbiExposure']
        }),
        saveSidbiExposure: builder.mutation<any, any[]>({
            query: (data) => ({
                url: `interestratefixation/savesidbiexposure`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['SidbiExposure'],
        }),
        getSanctionRating: builder.query<any, string>({
            query: (irfId) => `interestratefixation/getsanctionrating/${irfId}`,
            providesTags: ['SanctionRating']
        }),
        saveSanctionRating: builder.mutation<any, any>({
            query: (data) => ({
                url: `interestratefixation/savesanctionrating`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['SanctionRating'],
        }),
        // New endpoints for Approved Interest Rate Structure
        getApprovedStructure: builder.query<any, string>({
            query: (irfId) => `interestratefixation/getapprovedintrate/${irfId}`,
            providesTags: ['ApprovedStructure']
        }),
        saveApprovedStructure: builder.mutation<any, any>({
            query: (data) => ({
                url: `interestratefixation/saveapprovedintrate`,
                method: 'POST',
                body: data,
            }),
            invalidatesTags: ['ApprovedStructure'],
        }),
    }),
});

export const {
    useGetFixationInterestRateQuery,
    useSaveInternalRatingMutation,
    useGetInternalRatingPresentQuery,
    useGetInternalRatingSanctionQuery,
    useGetExternalRatingSanctionQuery,
    useGetExternalRatingPresentQuery,
    useSaveExternalRatingMutation,
    useGetDisbursementListQuery,
    useGetResetlistQuery,
    useSaveDisbursementMutation,
    useSaveResetMutation,
    useGetPresentProposalQuery,
    useSavePresentProposalMutation,
    useGetSidbiExposureQuery,
    useSaveSidbiExposureMutation,
    useGetSanctionRatingQuery,
    useSaveSanctionRatingMutation,
    // New hooks
    useGetApprovedStructureQuery,
    useSaveApprovedStructureMutation,
} = interestRateFixationApi;

import React, { useState } from 'react';
import {
  Table, TableBody, TableCell, TableHead, TableRow, Button, IconButton, Grid, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio
} from "@mui/material";
import DeleteIcon from '@mui/icons-material/Delete';
import AddCircleIcon from '@mui/icons-material/AddCircle';
import CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';
import { Formik, FieldArray, Form } from 'formik';
import * as Yup from 'yup';
import {
  useGetExternalRatingPresentQuery,
  useGetSanctionRatingQuery,
  useGetSidbiExposureQuery,
  useSaveSidbiExposureMutation
} from '../../../features/monitoring/interestRateFixationApi';
import { TextBoxField } from '../../../components/framework/TextBoxField';
import { EnhancedDropDown } from '../../../components/framework/EnhancedDropDown';
import { AdvanceDatePickerField } from '../../../components/framework/EnhancedComponents';
import moment from 'moment';
import NbfcSnackbar from '../../../components/shared/NbfcSnackbar';
import AutoSave from '../../../components/framework/AutoSave';

interface ExternalRatingProposalProps {
  irfId: string;
}

const ExternalRatingProposal: React.FC<ExternalRatingProposalProps> = ({ irfId }) => {
  const [downgrade, setDowngrade] = useState('');
  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);
  const [snackMsg, setSnackMsg] = useState<string>("");
  const [severity, setSeverity] = useState<"success" | "error">("success");

  // API hooks
  const { data: presentExternalRatings, isLoading: isLoadingPresent } = useGetExternalRatingPresentQuery(irfId, {
    skip: !irfId,
    refetchOnMountOrArgChange: true,
  });

  const { data: sanctionRating, isLoading: isLoadingSanction } = useGetSanctionRatingQuery(irfId, {
    skip: !irfId,
    refetchOnMountOrArgChange: true,
  });

  const { data: sidbiExposure, isLoading: isLoadingSidbi } = useGetSidbiExposureQuery(irfId, {
    skip: !irfId,
    refetchOnMountOrArgChange: true,
  });

  const [saveSidbiExposure] = useSaveSidbiExposureMutation();

  const handleDowngradeChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setDowngrade(event.target.value);
  };

  const initialValues = {
    sidbiExposures: sidbiExposure || [],
  };

  const validationSchema = Yup.object().shape({
    sidbiExposures: Yup.array().of(
      Yup.object().shape({
        ratedExposure: Yup.number().typeError("Must be a number").required("Required"),
        ratingAgency: Yup.string().required("Required"),
        dateOfRating: Yup.string().required("Required"),
      })
    ),
  });

  const handleSubmit = async (values: any) => {
    try {
      const finalValue = values.sidbiExposures.map((exposure: any, index: number) => ({
        ...exposure,
        irfId,
        ratingRefId: index + 1,
        saveStatus: '01',
      }));
      await saveSidbiExposure(finalValue).unwrap();
      setOpenSnackbar(true);
      setSeverity("success");
      setSnackMsg("SIDBI Exposure saved successfully");
    } catch (error) {
      console.error("Error saving SIDBI Exposure:", error);
      setOpenSnackbar(true);
      setSeverity("error");
      setSnackMsg("Failed to save SIDBI Exposure");
    }
  };

  const handleSnackClose = () => {
    setOpenSnackbar(false);
  };

  if (isLoadingPresent || isLoadingSanction || isLoadingSidbi) {
    return <p>Loading...</p>;
  }

  return (
    <div className="wrap-inner-table mt-0">
      <Table sx={{ minWidth: 650 }} aria-label="external ratings proposal table">
        <TableBody>
          <TableRow>
            <TableCell style={{ width: '31.7%' }}>Any downgrade in External Rating</TableCell>
            <TableCell>
              <FormControl component="fieldset">
                <FormLabel component="legend">Select</FormLabel>
                <RadioGroup
                  row
                  aria-label="downgrade"
                  name="downgrade"
                  value={downgrade}
                  onChange={handleDowngradeChange}
                >
                  <FormControlLabel value="Yes" control={<Radio size="small" />} label="Yes" />
                  <FormControlLabel value="No" control={<Radio size="small" />} label="No" />
                </RadioGroup>
              </FormControl>
            </TableCell>
          </TableRow>

          {downgrade === 'Yes' && (
            <>
              {/* Point 1: Rating where SIDBI exposure is covered */}
              <TableRow>
                <TableCell style={{ width: '31.7%' }}>1. Rating where SIDBI exposure is covered</TableCell>
                <TableCell>
                  <Formik
                    initialValues={initialValues}
                    validationSchema={validationSchema}
                    onSubmit={handleSubmit}
                    enableReinitialize={true}
                  >
                    {({ values }) => (
                      <Form>
                        <AutoSave debounceMs={2000} values={values} handleSubmit={handleSubmit} />
                        <FieldArray name="sidbiExposures">
                          {({ push, remove }) => (
                            <>
                              <Button 
                                type="button" 
                                size='small' 
                                className='text-capitalize mt-1 mb-3 saveBtn'
                                variant="contained" 
                                color="primary" 
                                onClick={() => push({
                                  irfId,
                                  ratedExposure: "",
                                  ratingAgency: "",
                                  dateOfRating: null,
                                  ratingRefId: 0,
                                  saveStatus: "01"
                                })}
                              >
                                Add <AddCircleIcon />
                              </Button>
                              <Table className="rtnTbl">
                                <TableHead>
                                  <TableRow>
                                    <TableCell><b>Rated Exposure (₹ crore)</b></TableCell>
                                    <TableCell><b>Rating Agency</b></TableCell>
                                    <TableCell><b>Date of Rating</b></TableCell>
                                    <TableCell><b>Actions</b></TableCell>
                                  </TableRow>
                                </TableHead>
                                <TableBody>
                                  {values.sidbiExposures.length > 0 ? (
                                    values.sidbiExposures.map((exposure: any, index: number) => (
                                      <TableRow key={index}>
                                        <TableCell>
                                          <TextBoxField
                                            label=""
                                            name={`sidbiExposures.${index}.ratedExposure`}
                                            type="number"
                                          />
                                        </TableCell>
                                        <TableCell>
                                          <EnhancedDropDown
                                            label=""
                                            name={`sidbiExposures.${index}.ratingAgency`}
                                            domain="mstr/getRatingAgency"
                                          />
                                        </TableCell>
                                        <TableCell>
                                          <AdvanceDatePickerField
                                            label=""
                                            name={`sidbiExposures.${index}.dateOfRating`}
                                            disableFuture={true}
                                          />
                                        </TableCell>
                                        <TableCell>
                                          <IconButton
                                            aria-label="delete"
                                            color="error"
                                            onClick={() => remove(index)}
                                            disabled={values.sidbiExposures.length === 1}
                                          >
                                            <DeleteIcon />
                                          </IconButton>
                                        </TableCell>
                                      </TableRow>
                                    ))
                                  ) : (
                                    <TableRow>
                                      <TableCell colSpan={4}>No data available</TableCell>
                                    </TableRow>
                                  )}
                                </TableBody>
                              </Table>
                              <Grid item xs={12} sx={{ mt: 2 }}>
                                <Button
                                  className="sbmtBtn mt-0 mb-3 ms-2 me-2"
                                  type='submit'
                                  variant="contained"
                                > 
                                  Save <CheckCircleOutlineIcon />
                                </Button>
                              </Grid>
                            </>
                          )}
                        </FieldArray>
                      </Form>
                    )}
                  </Formik>
                </TableCell>
              </TableRow>

              {/* Point 2: Present External Rating */}
              <TableRow>
                <TableCell style={{ width: '31.7%' }}>2. Present External Rating (from latest review)</TableCell>
                <TableCell>
                  {presentExternalRatings?.length > 0 ? (
                    <Table className="rtnTbl">
                      <TableHead>
                        <TableRow>
                          <TableCell><b>Name of Rating Agency</b></TableCell>
                          <TableCell><b>Instrument</b></TableCell>
                          <TableCell><b>Amount (in ₹ crore)</b></TableCell>
                          <TableCell><b>Rating</b></TableCell>
                          <TableCell><b>Outlook</b></TableCell>
                          <TableCell><b>Date of Rating</b></TableCell>
                        </TableRow>
                      </TableHead>
                      <TableBody>
                        {presentExternalRatings.map((rating: any, index: number) => (
                          <TableRow key={index}>
                            <TableCell>{rating.agencyName}</TableCell>
                            <TableCell>{rating.instrument}</TableCell>
                            <TableCell>{rating.amtCr}</TableCell>
                            <TableCell>{rating.ratingDesc}</TableCell>
                            <TableCell>{rating.outLook}</TableCell>
                            <TableCell>{moment(rating.ratingDt).format("DD-MM-YYYY")}</TableCell>
                          </TableRow>
                        ))}
                      </TableBody>
                    </Table>
                  ) : (
                    <p>No present external ratings available</p>
                  )}
                </TableCell>
              </TableRow>
            </>
          )}
        </TableBody>
      </Table>

      <NbfcSnackbar
        open={openSnackbar}
        msg={snackMsg}
        severity={severity}
        handleSnackClose={handleSnackClose}
        submitCall={false}
      />
    </div>
  );
};

export default ExternalRatingProposal;

import React from 'react';
import { Table, TableBody, TableCell, TableHead, TableRow } from "@mui/material";
import { Formik, Form, Field } from 'formik';
import { TextField } from '@mui/material';

const InterestRateApplicable = () => {
  const initialValues = {
    mclr: {
      oneYMclr: '',
      baseSpread: '',
      internalScore: '',
      internalScoreLinkedSpread: '',
      totalSpread: '',
      applicableRate: '',
    },
    fixed: {
      ratingGrade: '',
      dailyYieldMatrix: '',
      tenure: '',
      fimmdaYield: '',
      fimmdaSpread: '',
      sidbiSpread: '',
      totalSpread: '',
      minInterestRate: '',
      minInterestRateTrmv: '',
      finalRate: '',
    },
    tbill: {
      ratingGrade: '',
      benchmarkAsOn: '',
      benchmark: '',
      benchmarkRate: '',
      ratingSpread: '',
      sidbiSpread: '',
      totalSpread: '',
      minInterestRate: '',
      minInterestRateTrmv: '',
      finalRate: '',
    },
    comments: '',
  };

  return (
    <Formik
      initialValues={initialValues}
      onSubmit={() => {}} // No submission logic for now
    >
      {() => (
        <Form>
          {/* MCLR Table */}
          <Table sx={{ minWidth: 650 }} aria-label="mclr table" className="mt-4">
            <TableHead>
              <TableRow>
                <TableCell colSpan={6}>
                  <h6><b>Interest Rate applicable for present proposal</b></h6>
                </TableCell>
              </TableRow>
              <TableRow>
                <TableCell colSpan={6}><b>MCLR</b></TableCell>
              </TableRow>
              <TableRow>
                <TableCell style={{ width: '9%' }}><b>1 Y MCLR (%)</b></TableCell>
                <TableCell><b>Base spread</b></TableCell>
                <TableCell><b>Internal Score</b></TableCell>
                <TableCell><b>Internal Score Linked Spread</b></TableCell>
                <TableCell><b>Total Spread</b></TableCell>
                <TableCell><b>Applicable Rate (%)</b></TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              <TableRow>
                <TableCell>
                  <Field as={TextField} label="%" name="mclr.oneYMclr" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Base spread" name="mclr.baseSpread" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Internal Score" name="mclr.internalScore" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Internal Score Linked Spread" name="mclr.internalScoreLinkedSpread" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Total Spread" name="mclr.totalSpread" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Applicable Rate (%)" name="mclr.applicableRate" size="small" className="fnt_sml" />
                </TableCell>
              </TableRow>
            </TableBody>
          </Table>

          {/* Fixed Table */}
          <Table sx={{ minWidth: 650 }} aria-label="fixed table" className="mt-4">
            <TableHead>
              <TableRow>
                <TableCell colSpan={10}><b>Fixed</b></TableCell>
              </TableRow>
              <TableRow>
                <TableCell><b>Rating Grade</b></TableCell>
                <TableCell><b>Daily yield matrix as on</b></TableCell>
                <TableCell><b>Tenure</b></TableCell>
                <TableCell><b>FIMMDA yield for AAA rated NBFCs (Benchmark)</b></TableCell>
                <TableCell><b>FIMMDA Spread</b></TableCell>
                <TableCell><b>SIDBI Spread</b></TableCell>
                <TableCell><b>Total Spread</b></TableCell>
                <TableCell><b>Minimum Interest Rate</b></TableCell>
                <TableCell><b>Minimum interest rate as per TRMV guidance / date</b></TableCell>
                <TableCell><b>Final Rate</b></TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              <TableRow>
                <TableCell>
                  <Field as={TextField} label="Rating Grade" name="fixed.ratingGrade" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Daily yield matrix as on" name="fixed.dailyYieldMatrix" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Tenure" name="fixed.tenure" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="FIMMDA yield for AAA rated NBFCs" name="fixed.fimmdaYield" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="FIMMDA Spread" name="fixed.fimmdaSpread" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="SIDBI Spread" name="fixed.sidbiSpread" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Total Spread" name="fixed.totalSpread" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Minimum Interest Rate" name="fixed.minInterestRate" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Minimum interest rate as per TRMV guidance / date" name="fixed.minInterestRateTrmv" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Final Rate" name="fixed.finalRate" size="small" className="fnt_sml" />
                </TableCell>
              </TableRow>
            </TableBody>
          </Table>

          {/* T-bill Table */}
          <Table sx={{ minWidth: 650 }} aria-label="tbill table" className="mt-4">
            <TableHead>
              <TableRow>
                <TableCell colSpan={10}><b>T-bill</b></TableCell>
              </TableRow>
              <TableRow>
                <TableCell><b>Rating Grade</b></TableCell>
                <TableCell><b>Benchmark as on</b></TableCell>
                <TableCell><b>Benchmark</b></TableCell>
                <TableCell><b>Benchmark Rate</b></TableCell>
                <TableCell><b>Rating Spread (%)</b></TableCell>
                <TableCell><b>SIDBI Spread</b></TableCell>
                <TableCell><b>Total Spread</b></TableCell>
                <TableCell><b>Minimum Interest Rate</b></TableCell>
                <TableCell><b>Minimum interest rate as per TRMV guidance / date</b></TableCell>
                <TableCell><b>Final Rate</b></TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              <TableRow>
                <TableCell>
                  <Field as={TextField} label="Rating Grade" name="tbill.ratingGrade" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Benchmark as on" name="tbill.benchmarkAsOn" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Benchmark" name="tbill.benchmark" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Benchmark Rate" name="tbill.benchmarkRate" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="(%)" name="tbill.ratingSpread" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="SIDBI Spread" name="tbill.sidbiSpread" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Total Spread" name="tbill.totalSpread" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Minimum Interest Rate" name="tbill.minInterestRate" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Minimum interest rate as per TRMV guidance / date" name="tbill.minInterestRateTrmv" size="small" className="fnt_sml" />
                </TableCell>
                <TableCell>
                  <Field as={TextField} label="Final Rate" name="tbill.finalRate" size="small" className="fnt_sml" />
                </TableCell>
              </TableRow>
            </TableBody>
          </Table>

          {/* Comments Table */}
          <Table sx={{ minWidth: 650 }} aria-label="comments table" className="mt-4">
            <TableHead>
              <TableRow>
                <TableCell colSpan={1}><b>Comments</b></TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              <TableRow>
                <TableCell>
                  <Field
                    as={TextField}
                    label="Comments"
                    name="comments"
                    size="small"
                    className="fnt_sml"
                    multiline
                    rows={4}
                    fullWidth
                  />
                </TableCell>
              </TableRow>
            </TableBody>
          </Table>
        </Form>
      )}
    </Formik>
  );
};

export default InterestRateApplicable;


import {
    Accordion,
    AccordionSummary,
    AccordionDetails,
    Tabs,
    Typography,
    TextField,
    FormControl,
    InputLabel,
    MenuItem,
    Select,
    SelectChangeEvent,
    Autocomplete,
    Table,
    TableBody,
    TableHead,
    TableRow,
    TableCell,
    Button
} from "@mui/material";
import React, { memo } from "react";
import Tab from "@mui/material/Tab";
import Box from "@mui/material/Box";
import Section from "../../nbfc/Section";
import { useParams } from "react-router-dom";
import Workflow from "../../workflow/Workflow";
import { useAppSelector } from "../../../app/hooks";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
import ReviewOfNBFC from "../../monitoringPages/reviewModule/ReviewOfNBFC/ReviewOfNBFC";
import MonitoringExternalRating from "../../monitoringPages/reviewModule/MonitoringExternalRating/MonitoringExternalRating";
import ComplianceToPCAFramwork from "../../monitoringPages/reviewModule/complianceToPca/ComplianceToPCAFramwork";
import CriticalEvents from "../../monitoringPages/reviewModule/CriticalEvents/CriticalEvents";
import AnyOtherPendingComments from "../../monitoringPages/reviewModule/AnyOtherPendingComments/AnyOtherPendingComments";
import FinancialTable from "../common-components/FinancialTable";
import { RfBriefBackground } from "./RfBriefBackground";
import RfInternalRating from "./RfInternalRating";
import RfExternalRating from "./RfExternalRating";
import RfRateOfInterest from "./RfRateOfInterest";
import PresentProposal from "./PresentProposal";
import ExternalRatingProposal from "./ExternalRatingProposal";
import ApprovedInterestRateStructure from "./ApprovedInterestRateStructure"; // New import
import InterestRateApplicable from "./InterestRateApplicable"; // New import

interface TabPanelProps {
    children?: React.ReactNode;
    index: number;
    value: number;
}

function CustomTabPanel(props: Readonly<TabPanelProps>) {
    const { children, value, index, ...other } = props;

    return (
        <div
            role="tabpanel"
            hidden={value !== index}
            id={`simple-tabpanel-${index}`}
            aria-labelledby={`simple-tab-${index}`}
            {...other}
        >
            {value === index && <Box sx={{ p: 3 }}>{children}</Box>}
        </div>
    );
}

function a11yProps(index: number) {
    return {
        id: `simple-tab-${index}`,
        "aria-controls": `simple-tabpanel-${index}`,
    };
}

const InteresetRateFixation = () => {
    const [value, setValue] = React.useState(0);
    const { id } = useParams();
    console.log("id", id);
    const { applId } = useAppSelector((state: { userStore: any; }) => state.userStore);

    const [expanded, setExpanded] = React.useState("");
    const onOpenChange =
        (panel: any) => (event: React.SyntheticEvent, isExpanded: any) => {
            setExpanded(isExpanded ? panel : false);
        };

    const handleChange = (event: React.SyntheticEvent, newValue: number) => {
        setValue(newValue);
    };

    const [borrower, setBorrower] = React.useState('');

    const handleChangeBrw = (event: SelectChangeEvent) => {
        setBorrower(event.target.value);
    };

    const topBorrowers = [
        { label: 'Borrower 1', nbfcId: 1 },
        { label: 'Borrower 2', nbfcId: 2 },
        { label: 'Borrower 3', nbfcId: 3 },
        { label: 'Borrower 4', nbfcId: 4 },
    ];

    const topSchemes = [
        { label: 'Scheme of refinance to nbfcs', schCd: 'a' },
        { label: 'Scheme 2', schCd: 'b' },
        { label: 'Scheme 3', schCd: 'c' },
        { label: 'Scheme 4', schCd: 'd' },
        { label: 'Scheme 5', schCd: 'e' },
        { label: "Scheme 6", schCd: 'f' }
    ];

    const options = [
        { label: "Excellent", value: "Excellent" },
        { label: "Good", value: "Good" },
        { label: "Satisfactory", value: "Satisfactory" },
        { label: "Moderate", value: "Moderate" },
        { label: "Poor", value: "Poor" },
        { label: "Default", value: "Default" },
    ];

    const dummyLoanAccounts: any[] = [
        {
            id: 1, loanAccountNo: '000405007899', DisbDate: '30/04/2025', DisbAmt: 250, osAmount: 250,
            currentROI: '4.75', benchmark: "Benchmark will be here", fixedORFloating: 4, resetClause: 'Reset Clause here',
            loanStatus: 'Approved'
        },
        {
            id: 2, loanAccountNo: '000405007877', DisbDate: '30/04/2025', DisbAmt: 250, osAmount: 250,
            currentROI: '4.75', benchmark: "Benchmark will be here", fixedORFloating: 4, resetClause: 'Reset Clause here',
            loanStatus: 'Approved'
        }
    ];

    return (
        <div className="wrap-appraisal-area ">
            <Section>
                <div className="inner-top-heading">
                    <Typography
                        className="wrap-bold"
                        noWrap
                        variant="subtitle1"
                        component="div"
                        width={'50%'}
                    >
                        <h6 className="title ps-1">Non REF Disb Time Fixing</h6>
                    </Typography>
                </div>

                <Box className="wrap-tabs" sx={{ width: "100%" }}>
                    <Box sx={{ borderBottom: 1, borderColor: "divider" }}>
                        <Tabs
                            className="tabs-header"
                            value={value}
                            onChange={handleChange}
                            aria-label="basic tabs example"
                        >
                            <Tab
                                className="tab-ui"
                                label="Fixing of Interest Rate"
                                {...a11yProps(0)}
                            />
                            <Tab className="tab-ui" label="Financial" {...a11yProps(1)} />
                            <Tab className="tab-ui" label="Work Flow " {...a11yProps(2)} />
                        </Tabs>
                    </Box>
                    <CustomTabPanel value={value} index={0}>
                        <div className="wrap-appraisal-area">
                            <Section>
                                <div className="wrap-accordian custome-form text_count pt-3">
                                    {/* __________Issue under consideration___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panelX"}
                                        onChange={onOpenChange("panelX")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panelX-content"
                                            id="panelX-header"
                                        >
                                            Issue Under Consideration
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <div className="alnSet fldsSizeCstm">
                                                Fixation of Interest rate for disbursement of
                                                <FormControl sx={{ m: 1, minWidth: 160 }} size="small">
                                                    <InputLabel id="">Select</InputLabel>
                                                    <Select
                                                        labelId=""
                                                        id=""
                                                        value={borrower}
                                                        label="Borrower"
                                                        onChange={handleChangeBrw}
                                                    >
                                                        <MenuItem value={0}>One</MenuItem>
                                                        <MenuItem value={1}>Two</MenuItem>
                                                        <MenuItem value={1}>Three</MenuItem>
                                                    </Select>
                                                </FormControl> tranche of <TextField
                                                    label="Sanctioned Amount"
                                                    id=""
                                                    size="small" className="fnt_sml"
                                                />
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Background___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel2X"}
                                        onChange={onOpenChange("panel2X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel2X-content"
                                            id="panel2X-header"
                                        >
                                            Brief Background
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <RfBriefBackground irfId="121" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________External Rating___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel20X"}
                                        onChange={onOpenChange("panel20X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel20X-content"
                                            id="panel20X-header"
                                        >
                                            External Rating
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <RfExternalRating irfId="N000122" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Internal Rating___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel21X"}
                                        onChange={onOpenChange("panel21X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel21X-content"
                                            id="panel21X-header"
                                        >
                                            Internal Rating
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <RfInternalRating applId="N000122" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Rate of Interest___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel22X"}
                                        onChange={onOpenChange("panel22X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel22X-content"
                                            id="panel22X-header"
                                        >
                                            Rate of Interest
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <RfRateOfInterest irfId="N000122" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Present Proposal___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel3X"}
                                        onChange={onOpenChange("panel3X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel3X-content"
                                            id="panel3X-header"
                                        >
                                            Present Proposal
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <PresentProposal irfId="N000122" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________External Rating Proposal___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel4X"}
                                        onChange={onOpenChange("panel4X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel4X-content"
                                            id="panel4X-header"
                                        >
                                            External Rating Proposal
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <ExternalRatingProposal irfId="N000121" />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Approved Interest rate structure of the Bank___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel5X"}
                                        onChange={onOpenChange("panel5X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel5X-content"
                                            id="panel5X-header"
                                        >
                                            Approved Interest rate structure of the Bank
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <ApprovedInterestRateStructure irfId="N000122" />
                                            <InterestRateApplicable />
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Rate requested by the company___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel6X"}
                                        onChange={onOpenChange("panel6X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel6X-content"
                                            id="panel6X-header"
                                        >
                                            Rate Requested by the Company
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <TextField
                                                label="Rate Requested by the Company"
                                                id=""
                                                size="small" className="fnt_sml"
                                            />
                                            <div className="wrap-inner-table mt-4">
                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table">
                                                    <TableHead>
                                                        <TableRow>
                                                            <TableCell><b>Lender/Instrument </b></TableCell>
                                                            <TableCell><b>Facility Type </b></TableCell>
                                                            <TableCell><b>Date of Availment </b></TableCell>
                                                            <TableCell><b>Sanctioned Amount (crore) </b></TableCell>
                                                            <TableCell><b>Interest Rate </b></TableCell>
                                                            <TableCell><b>Tenure  </b></TableCell>
                                                        </TableRow>
                                                    </TableHead>
                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Lender/Instrument"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <FormControl sx={{ m: 1, minWidth: 120 }} size="small">
                                                                    <InputLabel id="">Select</InputLabel>
                                                                    <Select
                                                                        labelId=""
                                                                        id=""
                                                                        value={borrower}
                                                                        label="Borrower"
                                                                        onChange={handleChangeBrw}
                                                                    >
                                                                        <MenuItem value={0}>One</MenuItem>
                                                                        <MenuItem value={1}>Two</MenuItem>
                                                                    </Select>
                                                                </FormControl>
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Date of Availment "
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Sanctioned Amount"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Interest Rate "
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Tenure"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Recommendation___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel7X"}
                                        onChange={onOpenChange("panel7X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel7X-content"
                                            id="panel7X-header"
                                        >
                                            Recommendation
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <TextField
                                                label="Recommendation"
                                                id=""
                                                size="small" className="fnt_sml"
                                            />
                                            <div className="wrap-inner-table mt-4">
                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table">
                                                    <TableHead>
                                                        <TableRow>
                                                            <TableCell colSpan={8}><b>Interest Rate</b></TableCell>
                                                        </TableRow>
                                                        <TableRow>
                                                            <TableCell><b>Scheme</b></TableCell>
                                                            <TableCell><b>Amount(`crore)</b></TableCell>
                                                            <TableCell><b>Tenure</b></TableCell>
                                                            <TableCell><b>Applicable Rate </b></TableCell>
                                                            <TableCell><b>Discretion (%)</b></TableCell>
                                                            <TableCell><b>ROI Recommended </b></TableCell>
                                                            <TableCell><b>Reset Clause</b></TableCell>
                                                            <TableCell><b>Next Reset Date</b></TableCell>
                                                        </TableRow>
                                                    </TableHead>
                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Scheme"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Amount"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Tenure"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Applicable Rate"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Discretion %"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="ROI Recommended"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                            <TableCell>
                                                                <FormControl sx={{ m: 1, minWidth: 120 }} size="small">
                                                                    <InputLabel id="">Select</InputLabel>
                                                                    <Select
                                                                        labelId=""
                                                                        id=""
                                                                        value={borrower}
                                                                        label="Borrower"
                                                                        onChange={handleChangeBrw}
                                                                    >
                                                                        <MenuItem value={0}>One</MenuItem>
                                                                        <MenuItem value={1}>Two</MenuItem>
                                                                    </Select>
                                                                </FormControl>
                                                            </TableCell>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Next Reset Date"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Validity of Interest rate___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel8X"}
                                        onChange={onOpenChange("panel8X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel8X-content"
                                            id="panel8X-header"
                                        >
                                            Validity of Interest Rate
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <div className="wrap-inner-table mt-0">
                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table">
                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Date"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________DoP___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel9X"}
                                        onChange={onOpenChange("panel9X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel9X-content"
                                            id="panel9X-header"
                                        >
                                            DoP
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <div className="wrap-inner-table mt-0">
                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table">
                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>
                                                                <FormControl sx={{ m: 1, minWidth: 120 }} size="small">
                                                                    <InputLabel id="">Select</InputLabel>
                                                                    <Select
                                                                        labelId=""
                                                                        id=""
                                                                        value={borrower}
                                                                        label="Borrower"
                                                                        onChange={handleChangeBrw}
                                                                    >
                                                                        <MenuItem value={0}>One</MenuItem>
                                                                        <MenuItem value={1}>Two</MenuItem>
                                                                    </Select>
                                                                </FormControl>
                                                            </TableCell>
                                                        </TableRow>
                                                        <TableRow>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Comments"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>

                                    {/* __________Discretionary Powers___________ */}
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panel10X"}
                                        onChange={onOpenChange("panel10X")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panel10X-content"
                                            id="panel10X-header"
                                        >
                                            Discretionary Powers
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <div className="wrap-inner-table mt-0">
                                                <Table sx={{ minWidth: 650 }} aria-label="external ratings table">
                                                    <TableBody>
                                                        <TableRow>
                                                            <TableCell>
                                                                <TextField
                                                                    label="Discretionary Powers"
                                                                    id=""
                                                                    size="small" className="fnt_sml"
                                                                />
                                                            </TableCell>
                                                        </TableRow>
                                                    </TableBody>
                                                </Table>
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>
                                </div>
                            </Section>
                        </div>
                    </CustomTabPanel>
                    <CustomTabPanel value={value} index={1}>
                        <div className="wrap-appraisal-area">
                            <Section>
                                <div className="wrap-accordian custome-form text_count pt-3">
                                    <Accordion
                                        className="custome-accordian"
                                        expanded={expanded === "panelX"}
                                        onChange={onOpenChange("panelX")}
                                    >
                                        <AccordionSummary
                                            expandIcon={<ExpandMoreIcon />}
                                            aria-controls="panelX-content"
                                            id="panelX-header"
                                        >
                                            Financial
                                        </AccordionSummary>
                                        <AccordionDetails>
                                            <div className="wrap-inner-table mt-0">
                                                <FinancialTable />
                                            </div>
                                        </AccordionDetails>
                                    </Accordion>
                                </div>
                            </Section>
                        </div>
                    </CustomTabPanel>
                    <CustomTabPanel value={value} index={2}>
                        <Workflow formIdVal={applId} formTypeVal={"PREVISIT"} />
                    </CustomTabPanel>
                </Box>
            </Section>
        </div>
    );
};

export default memo(InteresetRateFixation);
